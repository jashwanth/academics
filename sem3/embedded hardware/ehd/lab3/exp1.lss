
exp1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000122  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000176  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  00000196  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000000cd  00000000  00000000  000001b1  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000075  00000000  00000000  0000027e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000ba  00000000  00000000  000002f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  000003b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000076  00000000  00000000  000003d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000018  00000000  00000000  00000446  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 8f 00 	jmp	0x11e	; 0x11e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include<avr/io.h>
#include<avr/delay.h>
int main(void)
{
  6c:	cf 92       	push	r12
  6e:	df 92       	push	r13
  70:	ef 92       	push	r14
  72:	ff 92       	push	r15
  74:	0f 93       	push	r16
  76:	1f 93       	push	r17
  78:	cf 93       	push	r28
  7a:	df 93       	push	r29
  while(1)
  {
  DDRA = 0b11111011;
  7c:	2b ef       	ldi	r18, 0xFB	; 251
  7e:	c2 2e       	mov	r12, r18
  unsigned int stp=0,i=0,output=0,p1=0,p2=2;
  for(i=0;i<=3;i++)
  {
    PORTA = i;
  80:	dd 24       	eor	r13, r13
  82:	d3 94       	inc	r13
  84:	92 e0       	ldi	r25, 0x02	; 2
  86:	e9 2e       	mov	r14, r25
  88:	83 e0       	ldi	r24, 0x03	; 3
  8a:	f8 2e       	mov	r15, r24
	  output|=(stp&(1<<i))<<(3-p1);
	  p1+=2;
	}
	else if(3-p1<1)
	{
	  output|=(stp&(1<<i))>>(3-p1+p2);
  8c:	c1 e0       	ldi	r28, 0x01	; 1
  8e:	d0 e0       	ldi	r29, 0x00	; 0
  }
  for(i=0;i<=3;i++)
  {
    if(3-p1 >= 1)
	{
	  output|=(stp&(1<<i))<<(3-p1);
  90:	03 e0       	ldi	r16, 0x03	; 3
  92:	10 e0       	ldi	r17, 0x00	; 0
#include<avr/delay.h>
int main(void)
{
  while(1)
  {
  DDRA = 0b11111011;
  94:	ca ba       	out	0x1a, r12	; 26
  unsigned int stp=0,i=0,output=0,p1=0,p2=2;
  for(i=0;i<=3;i++)
  {
    PORTA = i;
  96:	1b ba       	out	0x1b, r1	; 27
  98:	db ba       	out	0x1b, r13	; 27
  9a:	eb ba       	out	0x1b, r14	; 27
  9c:	fb ba       	out	0x1b, r15	; 27
  9e:	40 e0       	ldi	r20, 0x00	; 0
  a0:	50 e0       	ldi	r21, 0x00	; 0
  a2:	e0 e0       	ldi	r30, 0x00	; 0
  a4:	f0 e0       	ldi	r31, 0x00	; 0
  a6:	60 e0       	ldi	r22, 0x00	; 0
  a8:	70 e0       	ldi	r23, 0x00	; 0
  aa:	a2 e0       	ldi	r26, 0x02	; 2
  ac:	b0 e0       	ldi	r27, 0x00	; 0
    stp|=PINA2<<i;
  }
  for(i=0;i<=3;i++)
  {
    if(3-p1 >= 1)
  ae:	63 30       	cpi	r22, 0x03	; 3
  b0:	71 05       	cpc	r23, r1
  b2:	b1 f0       	breq	.+44     	; 0xe0 <main+0x74>
	{
	  output|=(stp&(1<<i))<<(3-p1);
  b4:	ce 01       	movw	r24, r28
  b6:	04 2e       	mov	r0, r20
  b8:	02 c0       	rjmp	.+4      	; 0xbe <main+0x52>
  ba:	88 0f       	add	r24, r24
  bc:	99 1f       	adc	r25, r25
  be:	0a 94       	dec	r0
  c0:	e2 f7       	brpl	.-8      	; 0xba <main+0x4e>
  c2:	8e 71       	andi	r24, 0x1E	; 30
  c4:	90 70       	andi	r25, 0x00	; 0
  c6:	98 01       	movw	r18, r16
  c8:	26 1b       	sub	r18, r22
  ca:	37 0b       	sbc	r19, r23
  cc:	02 c0       	rjmp	.+4      	; 0xd2 <main+0x66>
  ce:	88 0f       	add	r24, r24
  d0:	99 1f       	adc	r25, r25
  d2:	2a 95       	dec	r18
  d4:	e2 f7       	brpl	.-8      	; 0xce <main+0x62>
  d6:	e8 2b       	or	r30, r24
  d8:	f9 2b       	or	r31, r25
	  p1+=2;
  da:	6e 5f       	subi	r22, 0xFE	; 254
  dc:	7f 4f       	sbci	r23, 0xFF	; 255
  de:	12 c0       	rjmp	.+36     	; 0x104 <main+0x98>
	}
	else if(3-p1<1)
	{
	  output|=(stp&(1<<i))>>(3-p1+p2);
  e0:	ce 01       	movw	r24, r28
  e2:	04 2e       	mov	r0, r20
  e4:	02 c0       	rjmp	.+4      	; 0xea <main+0x7e>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	0a 94       	dec	r0
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <main+0x7a>
  ee:	8e 71       	andi	r24, 0x1E	; 30
  f0:	90 70       	andi	r25, 0x00	; 0
  f2:	0a 2e       	mov	r0, r26
  f4:	02 c0       	rjmp	.+4      	; 0xfa <main+0x8e>
  f6:	96 95       	lsr	r25
  f8:	87 95       	ror	r24
  fa:	0a 94       	dec	r0
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <main+0x8a>
  fe:	e8 2b       	or	r30, r24
 100:	f9 2b       	or	r31, r25
	  p2-=2;
 102:	12 97       	sbiw	r26, 0x02	; 2
  for(i=0;i<=3;i++)
  {
    PORTA = i;
    stp|=PINA2<<i;
  }
  for(i=0;i<=3;i++)
 104:	4f 5f       	subi	r20, 0xFF	; 255
 106:	5f 4f       	sbci	r21, 0xFF	; 255
 108:	44 30       	cpi	r20, 0x04	; 4
 10a:	51 05       	cpc	r21, r1
 10c:	81 f6       	brne	.-96     	; 0xae <main+0x42>
	{
	  output|=(stp&(1<<i))>>(3-p1+p2);
	  p2-=2;
	}
  }
  PORTA|=output<<3;
 10e:	9b b3       	in	r25, 0x1b	; 27
 110:	8e 2f       	mov	r24, r30
 112:	88 0f       	add	r24, r24
 114:	88 0f       	add	r24, r24
 116:	88 0f       	add	r24, r24
 118:	89 2b       	or	r24, r25
 11a:	8b bb       	out	0x1b, r24	; 27
 11c:	bb cf       	rjmp	.-138    	; 0x94 <main+0x28>

0000011e <_exit>:
 11e:	f8 94       	cli

00000120 <__stop_program>:
 120:	ff cf       	rjmp	.-2      	; 0x120 <__stop_program>
