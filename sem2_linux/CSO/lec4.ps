%!PS-Adobe-3.0
%%Title: (lecture4)
%%Creator: (PowerPoint: LaserWriter 8.0 8.0)
%%CreationDate: (3:33 PM Friday, January 27, 1995)
%%For: (dave)
%%Pages: 18
%%DocumentFonts: Helvetica-Bold Symbol Helvetica Helvetica-BoldOblique Helvetica-Oblique Times-Italic Times-Roman Times-BoldItalic Courier-Bold
%%DocumentNeededFonts: Helvetica-Bold Symbol Helvetica Helvetica-BoldOblique Helvetica-Oblique Times-Italic Times-Roman Times-BoldItalic Courier-Bold
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%ADO_PaperArea: -129 -125 3170 2425
%ADO_ImageableArea: 0 0 3041 2300
%%EndComments
/md 233 dict def md begin
/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 80 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
level2 startnoload
%%BeginFile: adobe_psp_patterns_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/patfreq Z
/patangle Z
/bk Z
/fg Z
/docolorscreen Z
/graystring Z
/pattransf{}def
/initQDpatterns
{
/patfreq 9.375 store
/patangle
1 0 $m defaultmatrix dtransform
exch atan
por not
{90 add}if
normland{180 add}if
store
:a
}def
/docolorscreen
/setcolorscreen where
{
pop/currentcolorscreen where
{
pop/setcmykcolor where
{
pop true
}{
false
}ifelse
}{
false
}ifelse
}{
false
}ifelse
def
/setgraypattern
{
/graystring xs
patfreq
patangle
{
1 add
4 mul
cvi
graystring
exch get
exch
1 add 4 mul
cvi
7 sub
bitshift
1 and
}setscreen
64 div setgray
}bd
/:b
{
/pattransf load settransfer
pop pop pop
setgraypattern
}bd
docolorscreen startnoload
/screensave 5 array def
/:a{currentgray currentscreen currenttransfer screensave astore pop}bd
/:e{screensave aload pop settransfer setscreen setgray}bd
/:d
{
pop pop pop
/pattransf load settransfer
setgraypattern 8{pop}repeat
}bd
/:c
/:d ld
docolorscreen endnoload docolorscreen not startnoload
/screensave 20 array def
/:a{currentcmykcolor currentcolorscreen currentcolortransfer screensave astore pop}bd
/:e{screensave aload pop setcolortransfer setcolorscreen setcmykcolor}bd
/rstring Z
/grstring Z
/blstring Z
/convroll{64 div 4 -1 roll}bd
/setcolorpattern
{
/graystring xs
/blstring xs
/grstring xs
/rstring xs
patfreq
patangle
{
1 add 4 mul cvi rstring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
patfreq
patangle
{
1 add 4 mul cvi grstring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
patfreq
patangle
{
1 add 4 mul cvi blstring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
patfreq
patangle
{
1 add 4 mul cvi graystring
exch get exch 1 add 4 mul
cvi 7 sub bitshift 1 and
}
setcolorscreen
convroll convroll convroll convroll
setcmykcolor
}bd
/:d
{
pop pop pop
/pattransf load settransfer
pop pop setcolorpattern
}bd
/:c
/:d ld
docolorscreen not endnoload
%%EndFile
level2  endnoload level2 not startnoload
%%BeginFile: adobe_psp_patterns_level2
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/pmtx Z
/BGnd Z
/FGnd Z
/PaintData Z
/PatternMtx Z
/PatHeight Z
/PatWidth Z
/$d Z
/savecolor 4 array def
/savecolorspace Z
/:a{
mark 0 0 0 currentcolor savecolor astore pop cleartomark
/savecolorspace currentcolorspace store
}bd
/:e{
savecolorspace setcolorspace
mark savecolor aload pop setcolor cleartomark
}bd
/initQDpatterns
{
gS
initmatrix
mT dup 4 get exch 5 get :T
1 0 dtransform round exch round exch idtransform
dup mul exch dup mul exch add sqrt
0 1 dtransform round exch round exch idtransform
dup mul exch dup mul exch add sqrt
neg
scale
0
por not{90 add}if
normland{180 add}if
rotate
matrix currentmatrix
gR
/pmtx xs
:a
}bd
/:t
{
14 dict begin
/BGnd xdf
/FGnd xdf
/PaintData xdf
/PatternType 1 def
/PaintType 1 def
/BBox[0 0 1 1]def
/TilingType 1 def
/XStep 1 def
/YStep 1 def
/PatternMtx[24 0 0 24 0 0]def
/PaintProc
BGnd null ne
{
{
begin
BGnd aload pop :F
0 0 1 1 rF
FGnd aload pop :F
24 24 true PatternMtx PaintData imagemask
end
}
}{
{
begin
FGnd aload pop :F
24 24 true PatternMtx PaintData imagemask
end
}
}ifelse
def
currentdict
PatternMtx
end
gS $c setcolorspace pmtx setmatrix makepattern gR
}bd
/:u
{
14 dict begin
/$d 8 dict def
/PatternType 1 def
/PaintType 1 def
/BBox[0 0 1 1]def
/TilingType 1 def
/XStep 1 def
/YStep 1 def
/PaintData xdf
/PatHeight xdf
/PatWidth xdf
/PatternMtx[PatWidth 0 0 PatHeight 0 0]def
$d begin
/ImageType 1 def
/MultipleDataSource false def
/Height PatHeight def
/Width PatWidth def
/Decode[0 1 0 1 0 1]def
/ImageMatrix PatternMtx def
/DataSource PaintData def
/BitsPerComponent 8 def
end
/PaintProc
{
begin
$d image
end
}def
currentdict
PatternMtx
end
gS $c setcolorspace pmtx setmatrix makepattern gR
}bd
/bk[1 1 1]def
/fg[0 0 0]def
/:b{
:t
setpattern
pop pop
}bd
/:d{
:t
setpattern
10{pop}repeat
}bd
/:c{
:u
setpattern
10{pop}repeat
}bd
%%EndFile
level2 not endnoload
%%BeginFile: adobe_psp_uniform_graphics
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
%%BeginFile: adobe_psp_derived_styles
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/wi
version(23.0)eq
{
{
gS 0 0 0 0 rC stringwidth gR
}bind
}{
/stringwidth load
}ifelse
def
/$o 1. def
/gl{$o G}bd
/ms{:M S}bd
/condensedmtx[.82 0 0 1 0 0]def
/:mc
{
condensedmtx :mf def
}bd
/extendedmtx[1.18 0 0 1 0 0]def
/:me
{
extendedmtx :mf def
}bd
/basefont Z
/basefonto Z
/dxa Z
/dxb Z
/dxc Z
/dxd Z
/dsdx2 Z
/bfproc Z
/:fbase
{
dup/FontType get 0 eq{
dup length dict begin
dup{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall
/FDepVector exch/FDepVector get[exch/:fbase load forall]def
}/bfproc load ifelse
/customfont currentdict end definefont
}bd
/:mo
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
basefont setfont
( )dup 0 4 -1 roll put
dup wi
setcharwidth
0 0 :M
gS
gl
dup show
gR
basefonto setfont
show
end
}def
}store :fbase
}bd
/:mso
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxa 1 ps div def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxa add exch
}if
setcharwidth
dup 0 0 ms
dup dxa 0 ms
dup dxa dxa ms
dup 0 dxa ms
gl
dxa 2. div dup ms
end
end
}def
}store :fbase
}bd
/:ms
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxb .05 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dxb add
}if
exch setcharwidth
dup dxb .01 add 0 ms
0 dxb :T
gS
gl
dup 0 0 ms
gR
basefonto setfont
0 0 ms
end
end
}def
}store :fbase
}bd
/:mss
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxc 1 ps div def
/dsdx2 .05 dxc 2 div add def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dsdx2 add
}if
exch setcharwidth
dup dsdx2 .01 add 0 ms
0 .05 dxc 2 div sub :T
dup 0 0 ms
dup dxc 0 ms
dup dxc dxc ms
dup 0 dxc ms
gl
dxc 2 div dup ms
end
end
}def
}store :fbase
}bd
/:msb
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxd .03 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxd add exch
}if
setcharwidth
dup 0 0 ms
dup dxd 0 ms
dup dxd dxd ms
0 dxd ms
end
end
}def
}store :fbase
}bd
/italicmtx[1 0 -.212557 1 0 0]def
/:mi
{
italicmtx :mf def
}bd
/:v
{
[exch dup/FontMatrix get exch
dup/FontInfo known
{
/FontInfo get
dup/UnderlinePosition known
{
dup/UnderlinePosition get
2 index 0
3 1 roll
transform
exch pop
}{
.1
}ifelse
3 1 roll
dup/UnderlineThickness known
{
/UnderlineThickness get
exch 0 3 1 roll
transform
exch pop
abs
}{
pop pop .067
}ifelse
}{
pop pop .1 .067
}ifelse
]
}bd
/$t Z
/$p Z
/$s Z
/:p
{
aload pop
2 index mul/$t xs
1 index mul/$p xs
.012 mul/$s xs
}bd
/:m
{gS
0 $p rm
$t lw
0 rl stroke
gR
}bd
/:n
{
gS
0 $p rm
$t lw
0 rl
gS
gl
stroke
gR
strokepath
$s lw
/setstrokeadjust where{pop
currentstrokeadjust true setstrokeadjust stroke setstrokeadjust
}{
stroke
}ifelse
gR
}bd
/:o
{gS
0 $p rm
$t 2 div dup rm
$t lw
dup 0 rl
stroke
gR
:n
}bd
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if
end		% md
%%EndProlog
%%BeginSetup
md begin
countdictstack
[
{%stopped
%%BeginFeature: *ManualFeed False
level2 {1 dict dup /ManualFeed false put setpagedevice}{statusdict begin /manualfeed false store end} ifelse
%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *InputSlot Upper

%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *PageRegion LetterSmall
level2 {
		2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice
	}{
		/lettersmall where {pop lettersmall} {letterR} ifelse
	} ifelse
%%EndFeature
}featurecleanup
(dave)setjob
/pT[1 0 0 -1 29.999 760.769]def/mT[.24 0 0 -.24 29.999 760.769]def
initQDpatterns
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Helvetica-Bold
%%IncludeFont: Symbol
%%IncludeFont: Helvetica
%%IncludeFont: Helvetica-BoldOblique
%%IncludeFont: Helvetica-Oblique
%%IncludeFont: Times-Italic
%%IncludeFont: Times-Roman
%%IncludeFont: Times-BoldItalic
%%IncludeFont: Courier-Bold
/f0_1/Helvetica-Bold :mre
/f0_192 f0_1 192 scf
/f0_160 f0_1 160 scf
/f0_144 f0_1 144 scf
/f0_112 f0_1 112 scf
/f0_80 f0_1 80 scf
/f0_18 f0_1 18 scf
/f1_1/Symbol :bsr
240/apple pd
:esr /f1_160 f1_1 160 scf
/f1_144 f1_1 144 scf
/f1_112 f1_1 112 scf
/f1_14 f1_1 14 scf
/f2_1 f1_1 def
/f2_192 f2_1 192 scf
/f2_160 f2_1 160 scf
/f2_144 f2_1 144 scf
/f2_112 f2_1 112 scf
/f2_80 f2_1 80 scf
/f2_18 f2_1 18 scf
/f3_1/Helvetica :mre
/f3_160 f3_1 160 scf
/f3_144 f3_1 144 scf
/f3_112 f3_1 112 scf
/f3_14 f3_1 14 scf
/f4_1 f0_1 :ff :mo :ff def
/f4_144 f4_1 144 scf
/f5_1 f1_1 :ff :mo :ff def
/f5_144 f5_1 144 scf
/f8_1/Helvetica-BoldOblique :mre
/f8_144 f8_1 144 scf
/f8_18 f8_1 18 scf
/f9_1 f2_1 :mi
/f9_144 f9_1 144 scf
/f11_1/Helvetica-Oblique :mre
/f11_144 f11_1 144 scf
/f12_1 f8_1 :v def
/f13_1/Times-Italic :mre
/f13_144 f13_1 144 scf
/f14_1/Times-Roman :mre
/f14_144 f14_1 144 scf
/f15_1/Times-BoldItalic :mre
/f15_144 f15_1 144 scf
/f16_1/Courier-Bold :mre
/f16_112 f16_1 112 scf
/f17_1 f3_1 1.04 scf
/f17_12 f17_1 12 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(dave; page: 1 of 18)setjob
%%EndPageSetup
gS 0 0 2300 3041 rC
25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
1 G
25 20 2250 3000 rF
0 G
400 305 1500 1125 rC
300.5 205.5 1699 1324 rS
1 G
401 306 1500 1125 rF
gS
.26 .26 scale
1774.357 5361.164 :M
0 G
f0_80 sf
(cs 152  Lec4.1)S
6290.903 5384.206 :M
-.034(\251DAP & SIK 1995)A
4120.964 2626.817 :M
f0_192 sf
(CS152)S
2592.405 2826.516 :M
(Computer Architecture and Engineering)S
2404.216 3026.216 :M
(Lecture 4: MIPS Instruction Set Architecture)S
3836.759 3744.366 :M
f0_144 sf
-.03(January 27, 1995)A
2457.984 3978.629 :M
(Dave Patterson \(patterson@cs\) & Shing Kong \(kong@cs\))S
2465.665 4212.891 :M
(Slides available on http://http.cs.berkeley.edu/~patterson)S
gR
0 G
300.5 205.5 1699 1324 rS
gR
gS 400 1610 1500 1125 rC
300.5 1510.5 1699 1324 rS
1 G
401 1611 1500 1125 rF
gS
.26 .26 scale
1774.357 10372.853 :M
0 G
f0_80 sf
(cs 152  Lec4.2)S
6290.903 10395.895 :M
-.034(\251DAP & SIK 1995)A
2081.605 6490.234 :M
f0_192 sf
(Overview of Today\325s Lecture: MIPS et al)S
1889.575 7123.896 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 7123.896 :M
f0_144 sf
(Review from Last Lecture \(3 minutes\))S
1889.575 7358.159 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 7358.159 :M
f0_144 sf
(MIPS ISA \(20 minutes\))S
1889.575 7592.421 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 7592.421 :M
f0_144 sf
(Administrative Matters \(3 minutes\))S
1889.575 7826.684 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 7826.684 :M
f0_144 sf
(More MIPS \(25  minutes\))S
1889.575 8060.947 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 8060.947 :M
f0_144 sf
(Break \(5 minutes\))S
1889.575 8291.37 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 8291.37 :M
f0_144 sf
(MIPS \(VAX, 80x86?\) \(25 minutes\))S
gR
0 G
300.5 1510.5 1699 1324 rS
gR
gS 25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(dave; page: 2 of 18)setjob
%%EndPageSetup
gS 0 0 2300 3041 rC
25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
1 G
25 20 2250 3000 rF
0 G
400 305 1500 1125 rC
300.5 205.5 1699 1324 rS
1 G
401 306 1500 1125 rF
gS
.26 .26 scale
1774.357 5361.164 :M
0 G
f0_80 sf
(cs 152  Lec4.3)S
6290.903 5384.206 :M
-.034(\251DAP & SIK 1995)A
2023.996 1405.577 :M
.988 .004 .16 :F
f0_192 sf
0 G
(Review: Instruction Set Design)S
gR
:a
0 22 22 0 <0000000000000000
><FF808080FF080808
><FF808080FF080808
><0000000000000000
>42 <FF808080FF080808
><FFFFFF808080808080808080FFFFFF080808080808080808
>[.988 .004 .16] [1 1 1] :d
601 668 1102 78 rF
:e
0 G
4 lw
603 670 1098 74 rS
62 50 1033 470 @f
-4 -4 1027 597 4 4 1035 493 @b
1025 595 -4 4 1066 591 4 1025 591 @a
-4 -4 1064 647 4 4 1060 593 @b
1062 645 -4 4 1079 641 4 1062 641 @a
-4 -4 1002 659 4 4 1023 593 @b
-4 -4 967 681 4 4 997 655 @b
1037 534 -4 4 1076 552 4 1037 530 @a
-4 -4 1079 556 4 4 1097 530 @b
1025 520 -4 4 1066 516 4 1025 516 @a
-4 -4 1066 519 4 4 1084 493 @b
63 50 1258.5 482 @f
1261 509 -4 4 1277 618 4 1261 505 @a
-4 -4 1229 644 4 4 1272 605 @b
1225 647 -4 4 1251 689 4 1225 643 @a
1275 609 -4 4 1326 640 4 1275 605 @a
-4 -4 1329 644 4 4 1359 618 @b
1362 622 -4 4 1375 627 4 1362 618 @a
-4 -4 1242 581 4 4 1260 543 @b
1200 570 -4 4 1242 578 4 1200 566 @a
1213 532 -4 4 1267 528 4 1213 528 @a
1175 509 -4 4 1214 527 4 1175 505 @a
-4 -4 1242 494 4 4 1247 480 @b
1025 472 -4 4 1051 490 4 1025 468 @a
8 lw
109 84 1133.5 800 @f
-8 -8 1120 818 8 8 1118 804 @b
1125 808 -4 8 1141 800 4 1125 800 @a
1137 812 -8 8 1151 810 8 1137 804 @a
1137 783 -4 8 1167 775 4 1137 775 @a
1100 783 -4 8 1116 775 4 1100 775 @a
-4 -8 1029 1034 4 8 1021 1017 @b
-4 -8 1141 946 4 8 1133 842 @b
1137 946 -4 8 1204 938 4 1137 938 @a
1196 946 -8 4 1229 1017 8 1196 942 @a
-8 -8 1233 1018 8 8 1231 1005 @b
-8 -4 1079 959 8 4 1137 938 @b
-4 -8 1054 1034 4 8 1071 955 @b
1025 1034 -4 8 1054 1026 4 1025 1026 @a
1137 846 -4 8 1229 850 4 1137 838 @a
-8 -8 1233 855 8 8 1281 742 @b
1288 746 -4 8 1329 738 4 1288 738 @a
-8 -4 1066 871 8 4 1137 850 @b
975 750 -8 8 1063 860 8 975 742 @a
938 746 -4 8 979 738 4 938 738 @a
1 G
990 682 318 54 rF
gS
.26 .26 scale
3840.6 2753.549 :M
0 G
f4_144 sf
/$o 1 def
(instruction set)S
2062.402 2173.652 :M
f0_144 sf
(software)S
2062.402 3375.69 :M
-.013(hardware)A
gR
0 G
1 lw
300.5 205.5 1699 1324 rS
gR
gS 400 1610 1500 1125 rC
300.5 1510.5 1699 1324 rS
1 G
401 1611 1500 1125 rF
gS
.26 .26 scale
1774.357 10372.853 :M
0 G
f0_80 sf
(cs 152  Lec4.4)S
6290.903 10395.895 :M
-.034(\251DAP & SIK 1995)A
2023.996 6417.267 :M
f0_192 sf
(Execution Cycle)S
gR
0 G
4 lw
555 1777 260 107 rS
gS
.26 .26 scale
2250.592 6947.238 :M
f8_144 sf
-.081(Instruction)A
2431.1 7166.14 :M
(Fetch)S
gR
555 1939 260 108 rS
gS
.26 .26 scale
2250.592 7573.22 :M
f8_144 sf
-.081(Instruction)A
2361.969 7792.121 :M
(Decode)S
gR
555 2101 260 108 rS
gS
.26 .26 scale
2327.404 8195.36 :M
f8_144 sf
(Operand)S
2431.1 8414.262 :M
(Fetch)S
gR
555 2264 260 52 rS
gS
.26 .26 scale
2346.607 8825.182 :M
f8_144 sf
-.021(Execute)A
gR
555 2376 260 108 rS
gS
.26 .26 scale
2400.375 9255.304 :M
f8_144 sf
(Result)S
2438.781 9470.365 :M
(Store)S
gR
555 2538 260 108 rS
gS
.26 .26 scale
2465.665 9877.445 :M
f8_144 sf
(Next)S
2250.592 10096.346 :M
-.081(Instruction)A
gR
400 1610 1500 307 rC
-4 -4 678 1939 4 4 674 1885 @b
gR
gS 400 1610 1500 1125 rC
-1 -1 677 1935 1 1 686 1898 @b
665 1899 -1 1 687 1898 1 665 1898 @a
665 1899 -1 1 677 1934 1 665 1898 @a
np 676 1935 :M
687 1898 :L
665 1898 :L
676 1935 :L
eofill
400 1610 1500 632 rC
-4 -4 678 2264 4 4 674 2210 @b
gR
gS 400 1610 1500 1125 rC
-1 -1 677 2260 1 1 686 2223 @b
665 2224 -1 1 687 2223 1 665 2223 @a
665 2224 -1 1 677 2259 1 665 2223 @a
np 676 2260 :M
687 2223 :L
665 2223 :L
676 2260 :L
eofill
400 1610 1500 469 rC
-4 -4 678 2101 4 4 674 2047 @b
gR
gS 400 1610 1500 1125 rC
-1 -1 677 2097 1 1 686 2060 @b
665 2061 -1 1 687 2060 1 665 2060 @a
665 2061 -1 1 677 2096 1 665 2060 @a
np 676 2097 :M
687 2060 :L
665 2060 :L
676 2097 :L
eofill
400 1610 1500 906 rC
-4 -4 678 2538 4 4 674 2484 @b
gR
gS 400 1610 1500 1125 rC
-1 -1 677 2534 1 1 686 2497 @b
665 2498 -1 1 687 2497 1 665 2497 @a
665 2498 -1 1 677 2533 1 665 2497 @a
np 676 2534 :M
687 2497 :L
665 2497 :L
676 2534 :L
eofill
400 1610 1500 743 rC
-4 -4 678 2375 4 4 674 2310 @b
gR
gS 400 1610 1500 1125 rC
-1 -1 677 2371 1 1 686 2334 @b
665 2335 -1 1 687 2334 1 665 2334 @a
665 2335 -1 1 677 2370 1 665 2334 @a
np 676 2371 :M
687 2334 :L
665 2334 :L
676 2371 :L
eofill
-4 -4 678 2675 4 4 674 2646 @b
501 2673 -4 4 680 2669 4 501 2669 @a
-4 -4 503 2675 4 4 499 1723 @b
501 1725 -4 4 680 1721 4 501 1721 @a
400 1610 1500 145 rC
-4 -4 678 1777 4 4 674 1723 @b
gR
gS 400 1610 1500 1125 rC
-1 -1 677 1773 1 1 686 1736 @b
665 1737 -1 1 687 1736 1 665 1736 @a
665 1737 -1 1 677 1772 1 665 1736 @a
np 676 1773 :M
687 1736 :L
665 1736 :L
676 1773 :L
eofill
gS
.26 .26 scale
3552.555 6954.919 :M
f0_144 sf
(Obtain instruction from program storage)S
3552.555 7580.9 :M
(Determine required actions and instruction size)S
3552.555 8203.041 :M
(Locate and obtain operand data)S
3552.555 8779.097 :M
(Compute result value or status)S
3552.555 9259.144 :M
(Deposit results in storage for later use)S
3552.555 9885.125 :M
(Determine successor instruction)S
gR
300.5 1510.5 1699 1324 rS
gR
gS 25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(dave; page: 3 of 18)setjob
%%EndPageSetup
gS 0 0 2300 3041 rC
25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
1 G
25 20 2250 3000 rF
0 G
400 305 1500 1125 rC
300.5 205.5 1699 1324 rS
1 G
401 306 1500 1125 rF
gS
.26 .26 scale
1774.357 5361.164 :M
0 G
f0_80 sf
(cs 152  Lec4.5)S
6290.903 5384.206 :M
-.034(\251DAP & SIK 1995)A
2081.605 1478.544 :M
f0_192 sf
(Review: Summary)S
1889.575 2112.206 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 2112.206 :M
f0_144 sf
(Use general purpose registers with a load-store architecture;)S
1889.575 2346.469 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 2346.469 :M
f0_144 sf
(Provide at least 16 general purpose registers plus separate floating-)S
2016.315 2492.403 :M
(point registers,)S
1889.575 2726.666 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 2726.666 :M
f0_144 sf
(Support these addressing modes: displacement \(with an address offset )S
2016.315 2872.601 :M
(size of 12 to 16 bits\), immediate \(size 8 to 16 bits\), and register deferred;)S
1889.575 3106.863 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 3106.863 :M
f0_144 sf
( Be sure all addressing modes apply to all data transfer instructions, )S
1889.575 3341.126 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 3341.126 :M
f0_144 sf
(Use fixed instruction encoding if interested in performance and use )S
2016.315 3487.061 :M
(variable instruction encoding if interested in code size;)S
1889.575 3721.323 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 3721.323 :M
f0_144 sf
(Support these data sizes and types: 8-bit, 16-bit, 32-bit integers and 32-)S
2016.315 3871.098 :M
(bit and 64-bit IEEE 754 floating point numbers;)S
1889.575 4105.361 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 4105.361 :M
f0_144 sf
(Support these simple instructions, since they will dominate the number )S
2016.315 4251.295 :M
(of instructions executed: load, store, add, subtract, move register-)S
2016.315 4397.229 :M
(register, and, shift, compare equal, compare not equal, branch \(with a )S
2016.315 4543.164 :M
(PC-relative address at least 8-bits long\), jump, call, and return;)S
1889.575 4777.427 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 4777.427 :M
f0_144 sf
( Aim for a minimalist instruction set.)S
gR
0 G
300.5 205.5 1699 1324 rS
gR
gS 400 1610 1500 1125 rC
300.5 1510.5 1699 1324 rS
1 G
401 1611 1500 1125 rF
gS
.26 .26 scale
1774.357 10372.853 :M
0 G
f0_80 sf
(cs 152  Lec4.6)S
6290.903 10395.895 :M
-.034(\251DAP & SIK 1995)A
2081.605 6490.234 :M
f0_192 sf
(MIPS R2000 / R3000  Registers)S
2127.692 6931.877 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2254.432 6931.877 :M
f0_144 sf
-1.645(Programmable storage\000)A
2442.622 7146.938 :M
f3_144 sf
(\245)S
2707.623 7146.938 :M
f0_144 sf
-2.762(2^32 x bytes\000)A
2442.622 7361.999 :M
f3_144 sf
(\245)S
2707.623 7361.999 :M
f0_144 sf
-1.318(31 x 32-bit GPRs \(R0 = 0\)\000)A
2442.622 7580.9 :M
f3_144 sf
(\245)S
2707.623 7580.9 :M
f0_144 sf
-1.06(32 x 32-bit FP regs \(paired DP\)\000)A
2442.622 7795.961 :M
f3_144 sf
(\245)S
2707.623 7795.961 :M
f0_144 sf
(HI, LO, PC)S
gR
0 G
2 lw
1292 1741 291 364 rC
1368 1750 214 226 rS
1367 1776 -2 2 1583 1774 2 1367 1774 @a
1367 1802 -2 2 1583 1800 2 1367 1800 @a
1367 1952 -2 2 1583 1950 2 1367 1950 @a
gS
2.094 2.092 scale
695.459 847.498 :M
f3_14 sf
(0)S
623.334 849.41 :M
f0_18 sf
(r0)S
623.334 867.574 :M
(r1)S
623.334 885.26 :M
cF f2_18 sf
(\260)S
sf
623.334 903.424 :M
cF f2_18 sf
(\260)S
sf
623.334 921.588 :M
cF f2_18 sf
(\260)S
sf
623.334 939.274 :M
(r31)S
gR
1368 1989 214 25 rS
1368 2027 214 25 rS
1368 2052 214 25 rS
gS
2.094 2.092 scale
623.334 963.652 :M
f0_18 sf
(PC)S
623.334 981.338 :M
-.996(lo)A
623.334 999.502 :M
-.996(hi)A
gR
gR
gS 400 1610 1500 1125 rC
300.5 1510.5 1699 1324 rS
gR
gS 25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(dave; page: 4 of 18)setjob
%%EndPageSetup
gS 0 0 2300 3041 rC
25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
1 G
25 20 2250 3000 rF
0 G
400 305 1500 1125 rC
300.5 205.5 1699 1324 rS
1 G
401 306 1500 1125 rF
gS
.26 .26 scale
1774.357 5361.164 :M
0 G
f0_80 sf
(cs 152  Lec4.7)S
6290.903 5384.206 :M
-.034(\251DAP & SIK 1995)A
2023.996 1405.577 :M
f0_192 sf
(MIPS Addressing Modes/Instruction Formats)S
gR
0 G
4 lw
828 582 100 63 rS
gS
.26 .26 scale
3214.582 2415.596 :M
f0_144 sf
-.921(op)A
gR
928 582 86 63 rS
1014 582 88 63 rS
1102 582 88 63 rS
1102 869 237 63 rS
1190 582 149 63 rS
gS
.26 .26 scale
3694.657 2415.596 :M
f0_144 sf
-.054(rs)A
3982.702 2415.596 :M
-.921(rt)A
4320.675 2415.596 :M
(rd)S
4416.69 3517.784 :M
(immed)S
gR
915 694 300 37 rS
gS
.26 .26 scale
3694.657 2799.633 :M
f0_144 sf
(register)S
gR
400 305 1500 369 rC
-4 -4 977 696 4 4 973 643 @b
gR
gS 400 305 1500 1125 rC
-1 -1 976 692 1 1 985 655 @b
964 656 -1 1 986 655 1 964 655 @a
964 656 -1 1 976 691 1 964 655 @a
np 975 692 :M
986 655 :L
964 655 :L
975 692 :L
eofill
gS
.26 .26 scale
1870.372 2365.671 :M
f0_144 sf
(Register \(direct\))S
gR
4 lw
828 869 100 63 rS
gS
.26 .26 scale
3214.582 3517.784 :M
f0_144 sf
-.921(op)A
gR
928 869 86 63 rS
1014 869 88 63 rS
gS
.26 .26 scale
3694.657 3517.784 :M
f0_144 sf
-.054(rs)A
3982.702 3517.784 :M
-.921(rt)A
gR
915 982 300 37 rS
gS
.26 .26 scale
3694.657 3901.821 :M
f0_144 sf
(register)S
gR
400 305 1500 657 rC
-4 -4 977 984 4 4 973 930 @b
gR
gS 400 305 1500 1125 rC
-1 -1 976 980 1 1 985 943 @b
964 944 -1 1 986 943 1 964 943 @a
964 944 -1 1 976 979 1 964 943 @a
np 975 980 :M
986 943 :L
964 943 :L
975 980 :L
eofill
gS
.26 .26 scale
1870.372 3421.774 :M
f0_144 sf
-.026(Base+index)A
gR
4 lw
62 50 1296 1007 @f
gS
.26 .26 scale
4946.693 3901.821 :M
f0_144 sf
(+)S
gR
400 305 857 1125 rC
1213 1007 -4 4 1279 1003 4 1213 1003 @a
gR
gS 400 305 1500 1125 rC
1238 995 -1 1 1275 1005 1 1238 994 @a
-1 -1 1239 1016 1 1 1238 994 @b
-1 -1 1239 1016 1 1 1274 1005 @b
np 1275 1005 :M
1238 994 :L
1238 1016 :L
1275 1005 :L
eofill
400 305 1500 657 rC
-4 -4 1302 984 4 4 1298 930 @b
gR
gS 400 305 1500 1125 rC
-1 -1 1301 980 1 1 1310 943 @b
1289 944 -1 1 1311 943 1 1289 943 @a
1289 944 -1 1 1301 979 1 1289 943 @a
np 1300 980 :M
1311 943 :L
1289 943 :L
1300 980 :L
eofill
400 305 1081 1125 rC
1325 1007 -4 4 1503 1003 4 1325 1003 @a
gR
gS 400 305 1500 1125 rC
1462 995 -1 1 1499 1005 1 1462 994 @a
-1 -1 1463 1016 1 1 1462 994 @b
-1 -1 1463 1016 1 1 1498 1005 @b
np 1499 1005 :M
1462 994 :L
1462 1016 :L
1499 1005 :L
eofill
4 lw
1501 907 163 137 rS
gS
.26 .26 scale
5810.828 3613.793 :M
.988 .004 .16 :F
f0_144 sf
0 G
(Memory)S
gR
.994 .502 .58 :F
1100 754 241 67 rF
0 G
1102 756 237 63 rS
gS
.26 .26 scale
4416.69 3087.662 :M
f0_144 sf
(immed)S
gR
828 756 100 63 rS
gS
.26 .26 scale
3214.582 3087.662 :M
f0_144 sf
-.921(op)A
gR
928 756 86 63 rS
1014 756 88 63 rS
gS
.26 .26 scale
3694.657 3087.662 :M
f0_144 sf
-.054(rs)A
3982.702 3087.662 :M
-.921(rt)A
1870.372 3037.737 :M
-.007(Immediate)A
gR
1102 1056 237 62 rS
gS
.26 .26 scale
4416.69 4239.774 :M
f0_144 sf
(immed)S
gR
828 1056 100 62 rS
gS
.26 .26 scale
3214.582 4239.774 :M
f0_144 sf
-.921(op)A
gR
928 1056 86 62 rS
1014 1056 88 62 rS
gS
.26 .26 scale
3694.657 4239.774 :M
f0_144 sf
-.054(rs)A
3982.702 4239.774 :M
-.921(rt)A
gR
915 1168 300 38 rS
gS
.26 .26 scale
3694.657 4623.812 :M
f0_144 sf
(PC)S
1870.372 4143.765 :M
-.006(PC-relative)A
gR
62 50 1296 1193 @f
gS
.26 .26 scale
4946.693 4623.812 :M
f0_144 sf
(+)S
gR
400 305 857 1125 rC
1213 1193 -4 4 1279 1189 4 1213 1189 @a
gR
gS 400 305 1500 1125 rC
1238 1181 -1 1 1275 1191 1 1238 1180 @a
-1 -1 1239 1202 1 1 1238 1180 @b
-1 -1 1239 1202 1 1 1274 1191 @b
np 1275 1191 :M
1238 1180 :L
1238 1202 :L
1275 1191 :L
eofill
400 305 1500 843 rC
-4 -4 1302 1170 4 4 1298 1116 @b
gR
gS 400 305 1500 1125 rC
-1 -1 1301 1166 1 1 1310 1129 @b
1289 1130 -1 1 1311 1129 1 1289 1129 @a
1289 1130 -1 1 1301 1165 1 1289 1129 @a
np 1300 1166 :M
1311 1129 :L
1289 1129 :L
1300 1166 :L
eofill
400 305 1081 1125 rC
1325 1193 -4 4 1503 1189 4 1325 1189 @a
gR
gS 400 305 1500 1125 rC
1462 1181 -1 1 1499 1191 1 1462 1180 @a
-1 -1 1463 1202 1 1 1462 1180 @b
-1 -1 1463 1202 1 1 1498 1191 @b
np 1499 1191 :M
1462 1180 :L
1462 1202 :L
1499 1191 :L
eofill
4 lw
1501 1093 163 138 rS
gS
.26 .26 scale
5810.828 4335.783 :M
f0_144 sf
(Memory)S
gR
1 lw
300.5 205.5 1699 1324 rS
gR
gS 400 1610 1500 1125 rC
300.5 1510.5 1699 1324 rS
1 G
401 1611 1500 1125 rF
gS
.26 .26 scale
1774.357 10372.853 :M
0 G
f0_80 sf
(cs 152  Lec4.8)S
6290.903 10395.895 :M
-.034(\251DAP & SIK 1995)A
2081.605 6490.234 :M
f0_192 sf
(MIPS R2000 / R3000  Operation Overview)S
2127.692 6931.877 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2254.432 6931.877 :M
f0_144 sf
-1.819(Arithmetic logical\000)A
2127.692 7166.14 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2703.782 7166.14 :M
f0_144 sf
-.01(Add,  AddU,  Sub,   SubU, And,  Or,  Xor, Nor, SLT, SLTU)A
2127.692 7400.403 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2703.782 7400.403 :M
f0_144 sf
-.726(AddI, AddIU, SLTI, SLTIU, AndI, OrI, XorI, LUI\000)A
2127.692 7634.666 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2703.782 7634.666 :M
f0_144 sf
-1.058(SLL, SRL, SRA, SLLV, SRLV, SRAV\000)A
2127.692 7868.928 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2254.432 7868.928 :M
f0_144 sf
-2.539(Memory Access\000)A
2127.692 8099.351 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2703.782 8099.351 :M
f0_144 sf
-1.139(LB, LBU, LH, LHU, LW, LWL,LWR\000)A
2127.692 8333.614 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2703.782 8333.614 :M
f0_144 sf
-1.684(SB, SH, SW, SWL, SWR\000)A
gR
0 G
300.5 1510.5 1699 1324 rS
gR
gS 25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(dave; page: 5 of 18)setjob
%%EndPageSetup
gS 0 0 2300 3041 rC
25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
1 G
25 20 2250 3000 rF
0 G
400 305 1500 1125 rC
300.5 205.5 1699 1324 rS
1 G
401 306 1500 1125 rF
gS
.26 .26 scale
1774.357 5361.164 :M
0 G
f0_80 sf
(cs 152  Lec4.9)S
6290.903 5384.206 :M
-.034(\251DAP & SIK 1995)A
2081.605 1478.544 :M
f0_192 sf
-.011(Multiply / Divide)A
1889.575 2112.206 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 2112.206 :M
f0_144 sf
(Start multiply, divide)S
2204.504 2327.267 :M
f3_144 sf
(\245)S
2323.563 2327.267 :M
f0_144 sf
-2.963(MULT rs, rt\000)A
2204.504 2542.328 :M
f3_144 sf
(\245)S
2323.563 2542.328 :M
f0_144 sf
-2.713(MULTU rs, rt\000)A
2204.504 2761.23 :M
f3_144 sf
(\245)S
2323.563 2761.23 :M
f0_144 sf
-3.281(DIV rs, rt\000)A
2204.504 2976.291 :M
f3_144 sf
(\245)S
2323.563 2976.291 :M
f0_144 sf
-2.979(DIVU rs, rt\000)A
1889.575 3210.554 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 3210.554 :M
f0_144 sf
-.989(\000Move result from multiply, divide)A
2204.504 3425.615 :M
f3_144 sf
(\245)S
2323.563 3425.615 :M
f0_144 sf
-4.803(MFHI rd\000)A
2204.504 3640.676 :M
f3_144 sf
(\245)S
2323.563 3640.676 :M
f0_144 sf
-4.804(MFLO rd\000)A
1889.575 3874.938 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 3874.938 :M
f0_144 sf
(Move to HI or LO)S
2204.504 4089.999 :M
f3_144 sf
(\245)S
2323.563 4089.999 :M
f0_144 sf
-.118(MTHI  rd)A
2204.504 4308.901 :M
f3_144 sf
(\245)S
2323.563 4308.901 :M
f0_144 sf
-.137(MTLO rd)A
gR
0 G
2 lw
1242 549 291 561 rC
1256 633 188 176 rS
1255 860 -2 2 1332 858 2 1255 858 @a
1330 860 -2 2 1357 895 2 1330 858 @a
-2 -2 1357 897 2 2 1368 858 @b
1368 860 -2 2 1458 858 2 1368 858 @a
-2 -2 1420 960 2 2 1456 858 @b
1292 960 -2 2 1420 958 2 1292 958 @a
1255 860 -2 2 1294 958 2 1255 858 @a
1242 549 291 294 rC
-2 -2 1282 860 2 2 1280 808 @b
gR
gS 1242 549 291 561 rC
31.5 -106 -74 1281.5 857.5 @k
1242 549 291 294 rC
-2 -2 1407 860 2 2 1405 808 @b
gR
gS 1242 549 291 561 rC
31.5 -106 -74 1407.5 857.5 @k
gS
2.094 2.086 scale
605.66 333.719 :M
f0_18 sf
(Registers)S
gR
2 lw
1243 1009 126 37 rS
1369 1009 125 37 rS
1242 549 291 444 rC
-2 -2 1332 1010 2 2 1330 958 @b
gR
gS 1242 549 291 561 rC
31 -106 -74 1332 1008 @k
1242 549 291 444 rC
-2 -2 1395 1010 2 2 1393 958 @b
gR
gS 1242 549 291 561 rC
-106 -74 63 62 1394.5 1008 @l
gS
2.094 2.086 scale
611.392 501.538 :M
f0_18 sf
-.996(HI)A
677.308 501.538 :M
-.996(LO)A
gR
-2 -2 1395 1110 2 2 1393 1045 @b
-2 -2 1332 1110 2 2 1330 1045 @b
1330 1110 -2 2 1533 1108 2 1330 1108 @a
-2 -2 1533 1110 2 2 1531 582 @b
1342 584 -2 2 1533 582 2 1342 582 @a
1242 549 291 69 rC
-2 -2 1344 634 2 2 1342 582 @b
gR
gS 1242 549 291 561 rC
31.5 -106 -74 1344.5 632.5 @k
gR
gS 400 305 1500 1125 rC
300.5 205.5 1699 1324 rS
gR
gS 400 1610 1500 1125 rC
300.5 1510.5 1699 1324 rS
1 G
401 1611 1500 1125 rF
gS
.26 .26 scale
1774.357 10372.853 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.10)A
6290.903 10395.895 :M
-.034(\251DAP & SIK 1995)A
2081.605 6490.234 :M
f0_192 sf
(MIPS arithmetic instructions)S
1881.894 6916.515 :M
f13_144 sf
-.087(Instruction)A
gR
0 G
490 1806 -2 2 657 1804 2 490 1804 @a
gS
.26 .26 scale
3030.233 6916.515 :M
f13_144 sf
-.126(Example)A
gR
790 1806 -2 2 923 1804 2 790 1804 @a
gS
.26 .26 scale
4036.471 6916.515 :M
f13_144 sf
-.141(Meaning)A
gR
1052 1806 -2 2 1187 1804 2 1052 1804 @a
gS
.26 .26 scale
5119.52 6916.515 :M
f13_144 sf
-.127(Comments)A
gR
1333 1806 -2 2 1493 1804 2 1333 1804 @a
gS
.26 .26 scale
1881.894 7123.896 :M
f14_144 sf
-.305(add )A
3030.233 7123.896 :M
-.083(add $1,$2,$3)A
4040.311 7123.896 :M
-.038($1 = $2 + $3)A
5119.52 7123.896 :M
-.016(3 operands; exception possible)A
1881.894 7331.276 :M
-.109(subtract)A
3030.233 7331.276 :M
(sub $1,$2,$3)S
4040.311 7331.276 :M
-.019($1 = $2 \320 $3)A
5119.52 7331.276 :M
-.016(3 operands; exception possible)A
1881.894 7538.656 :M
-.058(add immediate)A
3030.233 7538.656 :M
-.071(addi $1,$2,100)A
4040.311 7538.656 :M
-.035($1 = $2 + 100)A
5119.52 7538.656 :M
-.027(+ constant; exception possible)A
1881.894 7749.877 :M
-.076(add unsigned)A
3030.233 7749.877 :M
-.076(addu $1,$2,$3)A
4040.311 7749.877 :M
-.038($1 = $2 + $3)A
5119.52 7749.877 :M
-.022(3 operands; no exceptions)A
1881.894 7957.257 :M
-.043(subtract unsigned)A
3030.233 7957.257 :M
(subu $1,$2,$3)S
4036.471 7957.257 :M
-.019($1 = $2 \320 $3)A
5115.679 7957.257 :M
-.022(3 operands; no exceptions)A
1881.894 8164.637 :M
-.063(add imm. unsign.)A
3034.074 8164.637 :M
-.066(addiu $1,$2,100)A
4044.152 8164.637 :M
-.035($1 = $2 + 100)A
5123.361 8164.637 :M
-.035(+ constant; no exceptions)A
1881.894 8372.018 :M
(multiply )S
3034.074 8372.018 :M
(mult $2,$3)S
4040.311 8372.018 :M
-.009(Hi, Lo = $2 x $3)A
5123.361 8372.018 :M
-.035(64-bit signed product)A
1881.894 8579.398 :M
(multiply unsigned)S
3030.233 8579.398 :M
(multu$2,$3)S
4040.311 8579.398 :M
-.009(Hi, Lo = $2 x $3)A
5123.361 8579.398 :M
-.031(64-bit unsigned product)A
1881.894 8786.778 :M
-.155(divide )A
3034.074 8786.778 :M
(div $2,$3)S
4040.311 8786.778 :M
-.017(Lo = $2 )A
cF f1_144 sf
-.017(\270)A
sf
-.017( $3,)A
5123.361 8786.778 :M
-.03(Lo = quotient, Hi = remainder )A
4044.152 8997.999 :M
-.012( Hi = $2 mod $3 )A
1881.894 9205.379 :M
-.057(divide unsigned )A
3030.233 9205.379 :M
(divu $2,$3)S
4040.311 9205.379 :M
-.017(Lo = $2 )A
cF f1_144 sf
-.017(\270)A
sf
-.017( $3,)A
5119.52 9205.379 :M
-.015(Unsigned quotient & remainder )A
4044.152 9412.759 :M
-.013( Hi = $2 mod $3)A
1881.894 9620.139 :M
-.066(Move from Hi)A
3030.233 9620.139 :M
-.155(mfhi $1)A
4040.311 9620.139 :M
-.029($1 = Hi)A
5119.52 9620.139 :M
-.028(Used to get copy of Hi)A
1881.894 9827.52 :M
-.066(Move from Lo)A
3030.233 9827.52 :M
-.155(mflo $1)A
4040.311 9827.52 :M
-.029($1 = Lo)A
5119.52 9827.52 :M
-.029(Used to get copy of Lo)A
gR
300.5 1510.5 1699 1324 rS
gR
gS 25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(dave; page: 6 of 18)setjob
%%EndPageSetup
gS 0 0 2300 3041 rC
25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
1 G
25 20 2250 3000 rF
0 G
400 305 1500 1125 rC
300.5 205.5 1699 1324 rS
1 G
401 306 1500 1125 rF
gS
.26 .26 scale
1774.357 5361.164 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.11)A
6290.903 5384.206 :M
-.034(\251DAP & SIK 1995)A
2062.402 1440.141 :M
f0_160 sf
-.006(MIPS logical instructions)A
1862.691 1870.263 :M
f8_144 sf
-.081(Instruction)A
gR
0 G
485 492 -2 2 681 490 2 485 490 @a
gS
.26 .26 scale
3049.436 1870.263 :M
f8_144 sf
-.029(Example)A
gR
795 492 -2 2 951 490 2 795 490 @a
gS
.26 .26 scale
4021.108 1870.263 :M
f8_144 sf
(Meaning)S
gR
1048 492 -2 2 1202 490 2 1048 490 @a
gS
.26 .26 scale
5069.592 1870.263 :M
f8_144 sf
(Comment)S
gR
1320 492 -2 2 1495 490 2 1320 490 @a
gS
.26 .26 scale
1862.691 2104.526 :M
f3_144 sf
-.053(and )A
3045.596 2104.526 :M
-.043(and $1,$2,$3)A
4017.268 2104.526 :M
-.043($1 = $2 & $3)A
5061.911 2104.526 :M
(3 reg. operands; Logical AND)S
1862.691 2338.788 :M
(or)S
3049.436 2338.788 :M
-.03(or $1,$2,$3)A
4021.108 2338.788 :M
($1 = $2 | $3)S
5061.911 2338.788 :M
(3 reg. operands; Logical OR)S
1862.691 2573.051 :M
(xor)S
3049.436 2573.051 :M
-.027(xor $1,$2,$3)A
4021.108 2573.051 :M
-.046($1 = $2 )A
4547.27 2573.051 :M
f1_144 sf
-.16(\305 )A
f3_144 sf
-.349($3)A
5065.752 2573.051 :M
(3 reg. operands; Logical XOR)S
1862.691 2807.314 :M
(nor)S
3049.436 2807.314 :M
-.031(nor $1,$2,$3)A
4017.268 2807.314 :M
($1 = ~\($2 |$3\))S
5061.911 2807.314 :M
(3 reg. operands; Logical NOR)S
1862.691 3041.577 :M
-.01(and immediate)A
3045.596 3041.577 :M
-.037(andi $1,$2,10)A
4021.108 3041.577 :M
-.043($1 = $2 & 10)A
5061.911 3041.577 :M
-.015(Logical AND reg, constant)A
1862.691 3275.84 :M
(or immediate)S
3049.436 3275.84 :M
-.023(ori $1,$2,10)A
4021.108 3275.84 :M
($1 = $2 | 10)S
5065.752 3275.84 :M
-.016(Logical OR reg, constant)A
1862.691 3510.103 :M
(xor immediate )S
3049.436 3510.103 :M
-.019(xori $1, $2,10 )A
4021.108 3510.103 :M
-.054($1 = ~$2 &~10)A
5065.752 3510.103 :M
-.017(Logical XOR reg, constant)A
1862.691 3744.366 :M
-.005(shift left logical)A
3049.436 3744.366 :M
-.022(sll $1,$2,10)A
4021.108 3744.366 :M
-.051($1 = $2 << 10)A
5065.752 3744.366 :M
-.019(Shift left by constant)A
1862.691 3978.629 :M
(shift right logical)S
3049.436 3978.629 :M
-.019(srl $1,$2,10)A
4021.108 3978.629 :M
-.051($1 = $2 >> 10)A
5065.752 3978.629 :M
-.015(Shift right by constant)A
1862.691 4212.891 :M
(shift right arithm.)S
3049.436 4212.891 :M
-.027(sra $1,$2,10)A
4021.108 4212.891 :M
-.051($1 = $2 >> 10)A
5065.752 4212.891 :M
-.007(Shift right \(sign extend\) )A
1862.691 4447.154 :M
-.005(shift left logical)A
3049.436 4447.154 :M
-.021(sllv $1,$2,$3)A
4021.108 4447.154 :M
-.048($1 = $2 << $3 )A
5065.752 4447.154 :M
-.01(Shift left by variable)A
1862.691 4681.417 :M
(shift right logical)S
3049.436 4681.417 :M
-.016(srlv $1,$2, $3 )A
4021.108 4681.417 :M
-.048($1 = $2 >> $3 )A
5065.752 4681.417 :M
-.007(Shift right by variable)A
1862.691 4915.68 :M
(shift right arithm.)S
3049.436 4915.68 :M
-.023(srav $1,$2, $3 )A
4021.108 4915.68 :M
-.048($1 = $2 >> $3 )A
5065.752 4915.68 :M
-.005(Shift right arith. by variable )A
gR
300.5 205.5 1699 1324 rS
gR
gS 400 1610 1500 1125 rC
300.5 1510.5 1699 1324 rS
1 G
401 1611 1500 1125 rF
gS
.26 .26 scale
1774.357 10372.853 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.12)A
6290.903 10395.895 :M
-.034(\251DAP & SIK 1995)A
2043.199 6451.83 :M
f0_160 sf
-.008(MIPS data transfer instructions)A
1847.329 6870.431 :M
f8_144 sf
-.081(Instruction)A
gR
0 G
481 1794 -2 2 677 1792 2 481 1792 @a
gS
.26 .26 scale
3322.119 6870.431 :M
f8_144 sf
(Comment)S
gR
866 1794 -2 2 1041 1792 2 866 1792 @a
gS
.26 .26 scale
1847.329 7104.694 :M
f0_144 sf
(SW  500\(R4\), R3)S
3322.119 7104.694 :M
(Store word)S
1847.329 7338.957 :M
(SH  502\(R2\), R3)S
3322.119 7338.957 :M
(Store half)S
1847.329 7573.22 :M
(SB  41\(R3\), R2)S
3322.119 7573.22 :M
(Store byte)S
1847.329 8041.745 :M
(LW R1, 30\(R2\))S
3322.119 8041.745 :M
-.11(Load word)A
1847.329 8276.008 :M
(LH  R1, 40\(R3\))S
3322.119 8276.008 :M
-.068(Load halfword)A
1847.329 8506.431 :M
(LHU  R1, 40\(R3\))S
3322.119 8506.431 :M
-.035(Load halfword unsigned)A
1847.329 8740.694 :M
(LB  R1, 40\(R3\))S
3322.119 8740.694 :M
(Load byte)S
1847.329 8974.956 :M
(LBU R1, 40\(R3\))S
3322.119 8974.956 :M
(Load byte unsigned)S
1847.329 9443.482 :M
-.007(LUI R1, 40)A
3322.119 9443.482 :M
(Load Upper Immediate \(16 bits shifted left by 16\))S
gR
300.5 1510.5 1699 1324 rS
gR
gS 25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(dave; page: 7 of 18)setjob
%%EndPageSetup
gS 0 0 2300 3041 rC
25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
1 G
25 20 2250 3000 rF
0 G
400 305 1500 1125 rC
300.5 205.5 1699 1324 rS
1 G
401 306 1500 1125 rF
gS
.26 .26 scale
1774.357 5361.164 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.13)A
6290.903 5384.206 :M
-.034(\251DAP & SIK 1995)A
2081.605 1478.544 :M
f0_192 sf
-.016(Compare and Branch)A
1889.575 2112.206 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 2112.206 :M
f0_144 sf
-1.82(Compare and Branch\000)A
2204.504 2327.267 :M
f3_144 sf
(\245)S
2469.506 2327.267 :M
f0_144 sf
-.498(BEQ rs, rt, offset      if R[rs] == R[rt] then PC-relative branch\000)A
2204.504 2542.328 :M
f3_144 sf
(\245)S
2469.506 2542.328 :M
f0_144 sf
(BNE rs, rt, offset)S
3617.845 2542.328 :M
-1.578(                   <>\000)A
1889.575 2776.591 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 2776.591 :M
f0_144 sf
-1.256(Compare to zero and Branch\000)A
2204.504 2991.652 :M
f3_144 sf
(\245)S
2469.506 2991.652 :M
f0_144 sf
(BLEZ rs, offset)S
3617.845 2991.652 :M
-.887(if R[rs] <= 0 then PC-relative branch\000)A
2204.504 3210.554 :M
f3_144 sf
(\245)S
2469.506 3210.554 :M
f0_144 sf
(BGTZ rs, offset)S
3617.845 3210.554 :M
-2.063(               >\000)A
2204.504 3425.615 :M
f3_144 sf
(\245)S
2469.506 3425.615 :M
f0_144 sf
-.44(BLT)A
3041.755 3425.615 :M
-.009(             )A
4197.776 3425.615 :M
-16.451( <\000)A
2204.504 3640.676 :M
f3_144 sf
(\245)S
2469.506 3640.676 :M
f0_144 sf
-.005(BGEZ              )A
3621.686 3640.676 :M
-3.662(               >=\000\000)A
2204.504 3859.577 :M
f3_144 sf
(\245)S
2469.506 3859.577 :M
f0_144 sf
-.486(BLTZAL rs, offset    if R[rs] < 0 then branch and link \(into R 31\)\000)A
2204.504 4074.638 :M
f3_144 sf
(\245)S
2469.506 4074.638 :M
f0_144 sf
-.179(BGEZAL)A
3621.686 4074.638 :M
-.009(             )A
4197.776 4074.638 :M
-5.503(    >=\000)A
1889.575 4308.901 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 4308.901 :M
f0_144 sf
-.571(Remaining set of compare and branch take two instructions\000)A
1889.575 4543.164 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 4543.164 :M
f0_144 sf
-.002(Almost all comparisons are against zero!)A
gR
0 G
300.5 205.5 1699 1324 rS
gR
gS 400 1610 1500 1125 rC
300.5 1510.5 1699 1324 rS
1 G
401 1611 1500 1125 rF
gS
.26 .26 scale
1774.357 10372.853 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.14)A
6290.903 10395.895 :M
-.034(\251DAP & SIK 1995)A
2081.605 6490.234 :M
f0_192 sf
(MIPS jump, branch, compare instructions)S
1881.894 6897.314 :M
f15_144 sf
-.01(Instruction)A
gR
0 G
490 1801 -2 2 665 1799 2 490 1799 @a
gS
.26 .26 scale
3141.611 6897.314 :M
f15_144 sf
-.162(Example)A
gR
818 1801 -2 2 957 1799 2 818 1799 @a
gS
.26 .26 scale
4255.385 6897.314 :M
f15_144 sf
(Meaning)S
gR
1108 1801 -2 2 1250 1799 2 1108 1799 @a
gS
.26 .26 scale
1881.894 7131.576 :M
f3_144 sf
-.028(branch on equal)A
3137.77 7131.576 :M
-.044(beq $1,$2,100)A
4255.385 7131.576 :M
(if \($1 == $2\) go to PC+4+100)S
3141.611 7277.511 :M
f11_144 sf
-.013(Equal test; PC relative branch)A
1881.894 7511.774 :M
f3_144 sf
-.029(branch on not eq.)A
3137.77 7511.774 :M
-.044(bne $1,$2,100)A
4255.385 7511.774 :M
(if \($1!= $2\) go to PC+4+100)S
3141.611 7657.708 :M
f11_144 sf
-.011(Not equal test; PC relative )A
1881.894 7891.971 :M
f3_144 sf
-.024(set on less than)A
3137.77 7891.971 :M
-.027(slt $1,$2,$3)A
4255.385 7891.971 :M
(if \($2 < $3\) $1=1; else $1=0)S
3141.611 8037.905 :M
f11_144 sf
-.008(Compare less than; 2\325s comp. )A
1881.894 8272.168 :M
f3_144 sf
-.003(set less than imm.)A
3141.611 8272.168 :M
-.023(slti $1,$2,100)A
4255.385 8272.168 :M
(if \($2 < 100\) $1=1; else $1=0)S
3141.611 8421.942 :M
f11_144 sf
-.014(Compare < constant; 2\325s comp.)A
1881.894 8656.205 :M
f3_144 sf
-.021(set less than uns.)A
3137.77 8656.205 :M
-.028(sltu $1,$2,$3)A
4255.385 8656.205 :M
(if \($2 < $3\) $1=1; else $1=0)S
3141.611 8802.14 :M
f11_144 sf
(Compare less than; natural no.)S
1881.894 9036.402 :M
f3_144 sf
(set l. t. imm. uns.)S
3141.611 9036.402 :M
-.026(sltiu $1,$2,100)A
4259.225 9036.402 :M
(if \($2 < 100\) $1=1; else $1=0)S
3141.611 9182.337 :M
f11_144 sf
(Compare < constant; natural )S
1881.894 9416.6 :M
f3_144 sf
(jump)S
3141.611 9416.6 :M
-.036(j 10000)A
4259.225 9416.6 :M
-.043(go to 10000)A
3141.611 9562.534 :M
f11_144 sf
-.015(Jump to target address)A
1881.894 9796.797 :M
f3_144 sf
(jump register)S
3137.77 9796.797 :M
(jr $31)S
4255.385 9796.797 :M
-.041(go to $31)A
3141.611 9942.731 :M
f11_144 sf
-.003(For switch, procedure return)A
1881.894 10176.994 :M
f3_144 sf
-.009(jump and link)A
3137.77 10176.994 :M
-.028(jal 10000)A
4255.385 10176.994 :M
($31 = PC + 4; go to 10000)S
3141.611 10326.768 :M
f11_144 sf
-.003(For procedure call)A
gR
300.5 1510.5 1699 1324 rS
gR
gS 25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(dave; page: 8 of 18)setjob
%%EndPageSetup
gS 0 0 2300 3041 rC
25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
1 G
25 20 2250 3000 rF
0 G
400 305 1500 1125 rC
300.5 205.5 1699 1324 rS
1 G
401 306 1500 1125 rF
gS
.26 .26 scale
1774.357 5361.164 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.15)A
6290.903 5384.206 :M
-.034(\251DAP & SIK 1995)A
2081.605 1478.544 :M
f0_192 sf
-.007(Administrative Matters)A
1889.575 2112.206 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 2112.206 :M
f0_144 sf
(First Assignment due Monday at 4PM)S
2204.504 2327.267 :M
f3_144 sf
(\245)S
2323.563 2327.267 :M
f0_144 sf
(Please put discussion section number or time on homework!)S
1889.575 2561.53 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 2561.53 :M
f0_144 sf
(Second Assignment: Read Chapter 3 and Appendix A of \322Computer )S
2016.315 2707.464 :M
-.002(Organization and Design\323, do Exercises + run MIPS program on SPIM )A
2016.315 2857.239 :M
(and debug broken SPIM)S
2204.504 3072.3 :M
f3_144 sf
(\245)S
2323.563 3072.3 :M
f0_144 sf
(Exercises due following Monday \(2/6\))S
2204.504 3287.361 :M
f3_144 sf
(\245)S
2323.563 3287.361 :M
f0_144 sf
(Lab \(Problems 0,1,2,3\) due 2 Mondays later \(2/13\))S
2204.504 3502.422 :M
f3_144 sf
(\245)S
2323.563 3502.422 :M
f0_144 sf
(Start soon! 2 weeks because its more than one weeks work)S
2204.504 3721.323 :M
f3_144 sf
(\245)S
2323.563 3721.323 :M
f0_144 sf
(Problems 0, 1, 2 & Exercises by yourself)S
2204.504 3936.384 :M
f3_144 sf
(\245)S
2323.563 3936.384 :M
f0_144 sf
-.002(Problem 3 only of lab in pairs)A
2465.665 4151.445 :M
f3_144 sf
(-)S
2680.739 4151.445 :M
f0_144 sf
(Pairs randomly assigned in discussion sections)S
2204.504 4366.506 :M
f3_144 sf
(\245)S
2323.563 4366.506 :M
f0_144 sf
(Estimate time spent on prior assignment for feedback)S
1889.575 4600.769 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 4600.769 :M
f0_144 sf
(Other topics?)S
gR
0 G
300.5 205.5 1699 1324 rS
gR
gS 400 1610 1500 1125 rC
300.5 1510.5 1699 1324 rS
1 G
401 1611 1500 1125 rF
gS
.26 .26 scale
1774.357 10372.853 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.16)A
6290.903 10395.895 :M
-.034(\251DAP & SIK 1995)A
2112.33 6401.905 :M
f0_192 sf
(Why Are Stacks So Great?)S
2112.33 6705.295 :M
f8_144 sf
(Stacking of Subroutine Calls & Returns and Environments:)S
2350.447 7185.342 :M
f0_144 sf
-.297(A:  )A
2350.447 7335.116 :M
-.077(      CALL B)A
2350.447 7776.759 :M
(              CALL C)S
2350.447 8068.628 :M
(              C:  )S
2350.447 8214.562 :M
-.006(                      RET)A
2350.447 8656.205 :M
-.005(              RET)A
gR
0 G
826 2049 -4 4 917 2045 4 826 2045 @a
-4 -4 828 2176 4 4 824 2047 @b
826 2174 -4 4 917 2170 4 826 2170 @a
738 1937 -4 4 817 1933 4 738 1933 @a
-4 -4 740 2276 4 4 736 1935 @b
738 2274 -4 4 817 2270 4 738 2270 @a
-4 -4 1302 1897 4 4 1298 1806 @b
1300 1895 -4 4 1628 1891 4 1300 1891 @a
1300 1808 -4 4 1628 1804 4 1300 1804 @a
-4 -4 1364 1897 4 4 1360 1806 @b
663 1837 -4 4 767 1833 4 663 1833 @a
-4 -4 665 2326 4 4 661 1835 @b
663 2324 -4 4 767 2320 4 663 2320 @a
gS
.26 .26 scale
2638.492 7569.379 :M
f0_144 sf
-.297(B:  )A
5073.433 7139.257 :M
(A)S
gR
-4 -4 1302 2009 4 4 1298 1918 @b
1300 2007 -4 4 1628 2003 4 1300 2003 @a
1300 1920 -4 4 1628 1916 4 1300 1916 @a
-4 -4 1364 2009 4 4 1360 1918 @b
gS
.26 .26 scale
5073.433 7569.379 :M
f0_144 sf
(A)S
gR
-4 -4 1426 2009 4 4 1422 1918 @b
gS
.26 .26 scale
5311.55 7569.379 :M
f0_144 sf
(B)S
gR
-4 -4 1302 2126 4 4 1298 2034 @b
1300 2124 -4 4 1628 2120 4 1300 2120 @a
1300 2036 -4 4 1628 2032 4 1300 2032 @a
-4 -4 1364 2126 4 4 1360 2034 @b
gS
.26 .26 scale
5073.433 8018.703 :M
f0_144 sf
(A)S
gR
-4 -4 1426 2126 4 4 1422 2034 @b
gS
.26 .26 scale
5311.55 8018.703 :M
f0_144 sf
(B)S
gR
-4 -4 1485 2122 4 4 1481 2034 @b
gS
.26 .26 scale
5538.145 8018.703 :M
f0_144 sf
(C)S
gR
-4 -4 1302 2234 4 4 1298 2143 @b
1300 2232 -4 4 1628 2228 4 1300 2228 @a
1300 2145 -4 4 1628 2141 4 1300 2141 @a
-4 -4 1364 2234 4 4 1360 2143 @b
gS
.26 .26 scale
5073.433 8433.464 :M
f0_144 sf
(A)S
gR
-4 -4 1426 2234 4 4 1422 2143 @b
gS
.26 .26 scale
5311.55 8433.464 :M
f0_144 sf
(B)S
gR
-4 -4 1302 2347 4 4 1298 2255 @b
1300 2345 -4 4 1628 2341 4 1300 2341 @a
1300 2257 -4 4 1628 2253 4 1300 2253 @a
-4 -4 1364 2347 4 4 1360 2255 @b
gS
.26 .26 scale
5073.433 8867.426 :M
f0_144 sf
(A)S
gR
400 1610 870 1125 rC
-4 -4 734 1858 4 4 1288 1837 @b
gR
gS 400 1610 1500 1125 rC
1251 1830 -1 1 1288 1839 1 1251 1829 @a
-1 -1 1252 1851 1 1 1251 1829 @b
-1 -1 1252 1851 1 1 1287 1839 @b
np 1288 1839 :M
1251 1829 :L
1251 1851 :L
1288 1839 :L
eofill
400 1610 874 1125 rC
776 1958 -4 4 1296 1966 4 776 1954 @a
gR
gS 400 1610 1500 1125 rC
1255 1957 -1 1 1292 1967 1 1255 1956 @a
-1 -1 1256 1978 1 1 1255 1956 @b
-1 -1 1256 1978 1 1 1291 1967 @b
np 1292 1968 :M
1255 1956 :L
1255 1978 :L
1292 1968 :L
eofill
400 1610 874 1125 rC
876 2070 -4 4 1296 2078 4 876 2066 @a
gR
gS 400 1610 1500 1125 rC
1255 2069 -1 1 1292 2079 1 1255 2068 @a
-1 -1 1256 2090 1 1 1255 2068 @b
-1 -1 1256 2090 1 1 1291 2079 @b
np 1292 2080 :M
1255 2068 :L
1255 2090 :L
1292 2080 :L
eofill
400 1610 878 1125 rC
863 2195 -4 4 1300 2191 4 863 2191 @a
gR
gS 400 1610 1500 1125 rC
1259 2183 -1 1 1296 2193 1 1259 2182 @a
-1 -1 1260 2204 1 1 1259 2182 @b
-1 -1 1260 2204 1 1 1295 2193 @b
np 1296 2193 :M
1259 2182 :L
1259 2204 :L
1296 2193 :L
eofill
400 1610 878 1125 rC
767 2295 -4 4 1300 2295 4 767 2291 @a
gR
gS 400 1610 1500 1125 rC
1259 2287 -1 1 1296 2297 1 1259 2286 @a
-1 -1 1260 2308 1 1 1259 2286 @b
-1 -1 1260 2308 1 1 1295 2297 @b
np 1296 2297 :M
1259 2286 :L
1259 2308 :L
1296 2297 :L
eofill
gS
.26 .26 scale
2177.62 9316.75 :M
f0_144 sf
(Some machines provide a memory stack as part of the architecture)S
2177.62 9462.684 :M
(      \(e.g., the VAX\))S
2177.62 9754.553 :M
(Sometimes stacks are implemented via software convention \(e.g.,)S
2177.62 9904.327 :M
(      MIPS\))S
gR
300.5 1510.5 1699 1324 rS
gR
gS 25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(dave; page: 9 of 18)setjob
%%EndPageSetup
gS 0 0 2300 3041 rC
25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
1 G
25 20 2250 3000 rF
0 G
400 305 1500 1125 rC
300.5 205.5 1699 1324 rS
1 G
401 306 1500 1125 rF
gS
.26 .26 scale
1774.357 5361.164 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.17)A
6290.903 5384.206 :M
-.034(\251DAP & SIK 1995)A
2112.33 1390.216 :M
f0_192 sf
-.018(Memory Stacks)A
2112.33 1743.53 :M
f0_144 sf
(Useful for stacked environments/subroutine call & return even if )S
2112.33 1889.465 :M
(operand stack not part of architecture)S
2112.33 2319.587 :M
f8_144 sf
(Stacks that Grow Up vs. Stacks that Grow Down:)S
gR
0 G
-4 -4 740 971 4 4 736 655 @b
-4 -4 1089 971 4 4 1085 655 @b
738 919 -4 4 1091 915 4 738 915 @a
738 882 -4 4 1091 878 4 738 878 @a
738 844 -4 4 1091 840 4 738 840 @a
738 806 -4 4 1091 802 4 738 802 @a
gS
.26 .26 scale
3406.612 3502.422 :M
f0_144 sf
(a)S
3406.612 3360.328 :M
(b)S
3406.612 3214.394 :M
(c)S
gR
400 669 1500 761 rC
-4 -4 1185 975 4 4 1181 651 @b
gR
gS 400 305 1500 1125 rC
-1 -1 1173 689 1 1 1183 652 @b
1172 689 -1 1 1194 688 1 1172 688 @a
1183 653 -1 1 1194 688 1 1183 652 @a
np 1183 652 :M
1172 689 :L
1194 689 :L
1183 652 :L
eofill
gS
.26 .26 scale
4639.445 3729.004 :M
f0_144 sf
(0  Little)S
4639.445 2653.699 :M
-.105(inf.  Big)A
5553.508 2638.338 :M
(0  Little)S
5568.87 3709.802 :M
-.105(inf.  Big)A
6306.265 3056.939 :M
(Memory)S
6306.265 3202.873 :M
-.017(Addresses)A
gR
4 lw
522 884 74 53 rS
gS
.26 .26 scale
2039.359 3529.305 :M
f0_144 sf
-.094(SP)A
gR
-4 -4 553 884 4 4 549 817 @b
400 305 320 1125 rC
551 819 -4 4 742 815 4 551 815 @a
gR
gS 400 305 1500 1125 rC
701 807 -1 1 738 817 1 701 806 @a
-1 -1 702 828 1 1 701 806 @b
-1 -1 702 828 1 1 737 817 @b
np 738 817 :M
701 806 :L
701 828 :L
738 817 :L
eofill
738 769 -4 4 1091 765 4 738 765 @a
:a
16 <EEDDBB77EEDDBB77
><EEEEEEDDDDDDBBBBBB777777EEEEEEDDDDDDBBBBBB777777
>fg bk :b
-4 -4 553 821 4 4 549 779 @b
400 305 320 1125 rC
551 781 -4 4 742 777 4 551 777 @a
gR
:a
16 <EEDDBB77EEDDBB77
><EEEEEEDDDDDDBBBBBB777777EEEEEEDDDDDDBBBBBB777777
>fg bk :b
gS 400 305 1500 1125 rC
701 769 -1 1 738 779 1 701 768 @a
-1 -1 702 790 1 1 701 768 @b
-1 -1 702 790 1 1 737 779 @b
np 738 779 :M
701 768 :L
701 790 :L
738 779 :L
eofill
:e
gS
.26 .26 scale
2112.33 2703.624 :M
0 G
f0_144 sf
(Next)S
2112.33 2849.558 :M
(Empty?)S
2400.375 3421.774 :M
(Last)S
2400.375 3571.549 :M
-.224(Full?)A
2062.402 3901.821 :M
-.005(How is empty stack represented?)A
2062.402 4239.774 :M
-.029(Little --> Big/Last Full)A
gR
0 G
537 1109 -2 2 921 1107 2 537 1107 @a
gS
.26 .26 scale
2062.402 4535.483 :M
f0_144 sf
(POP:      Read from Mem\(SP\))S
2062.402 4681.417 :M
-.01(               Decrement SP)A
2062.402 4973.286 :M
-.003(PUSH:    Increment SP)A
2062.402 5123.06 :M
(               Write to Mem\(SP\))S
gR
400 673 1500 757 rC
-4 -4 1414 984 4 4 1410 655 @b
gR
:e
0 G
gS 400 305 1500 1125 rC
-1 -1 1402 693 1 1 1412 656 @b
1401 693 -1 1 1423 692 1 1401 692 @a
1412 657 -1 1 1423 692 1 1412 656 @a
np 1412 656 :M
1401 693 :L
1423 693 :L
1412 656 :L
eofill
gS
.26 .26 scale
4650.967 3087.662 :M
f8_144 sf
(grows)S
4773.866 3233.596 :M
-.921(up)A
5568.87 3087.662 :M
(grows)S
5568.87 3233.596 :M
-.296(down)A
4946.693 4239.774 :M
f0_144 sf
(Little --> Big/Next Empty)S
gR
1288 1109 -2 2 1724 1107 2 1288 1107 @a
gS
.26 .26 scale
4946.693 4535.483 :M
f0_144 sf
-.01(POP:      Decrement SP)A
4946.693 4681.417 :M
(               Read from Mem\(SP\))S
4946.693 4973.286 :M
(PUSH:    Write to Mem\(SP\))S
4946.693 5123.06 :M
-.009(               Increment SP)A
gR
300.5 205.5 1699 1324 rS
gR
gS 400 1610 1500 1125 rC
300.5 1510.5 1699 1324 rS
1 G
401 1611 1500 1125 rF
gS
.26 .26 scale
1774.357 10372.853 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.18)A
6290.903 10395.895 :M
-.034(\251DAP & SIK 1995)A
2023.996 6417.267 :M
f0_192 sf
(Call-Return Linkage: Stack Frames)S
gR
0 G
4 lw
828 1737 374 649 rS
528 2237 112 50 rS
gS
.26 .26 scale
2112.33 8771.417 :M
f0_144 sf
(FP)S
gR
400 1610 383 1125 rC
638 2274 -4 4 805 2270 4 638 2270 @a
gR
gS 400 1610 1500 1125 rC
764 2262 -1 1 801 2272 1 764 2261 @a
-1 -1 765 2283 1 1 764 2261 @b
-1 -1 765 2283 1 1 800 2272 @b
np 801 2272 :M
764 2261 :L
764 2283 :L
801 2272 :L
eofill
gS
.26 .26 scale
3648.57 6993.323 :M
f0_144 sf
(ARGS)S
gR
4 lw
840 1750 350 150 rS
gS
.26 .26 scale
3456.54 7569.379 :M
f0_144 sf
-.033(Callee Save)A
3529.511 7719.154 :M
-.006(Registers)A
gR
840 1912 350 199 rS
gS
.26 .26 scale
3406.612 8387.379 :M
f0_144 sf
-.02(Local Variables)A
gR
840 2124 350 150 rS
528 2349 112 49 rS
gS
.26 .26 scale
2112.33 9201.539 :M
f0_144 sf
-.094(SP)A
gR
400 1610 383 1125 rC
638 2386 -4 4 805 2382 4 638 2382 @a
gR
gS 400 1610 1500 1125 rC
764 2374 -1 1 801 2384 1 764 2373 @a
-1 -1 765 2395 1 1 764 2373 @b
-1 -1 765 2395 1 1 800 2384 @b
np 801 2384 :M
764 2373 :L
764 2395 :L
801 2384 :L
eofill
1213 2262 -4 4 1304 2258 4 1213 2258 @a
400 2215 1500 520 rC
-4 -4 1252 2264 4 4 1248 2197 @b
gR
gS 400 1610 1500 1125 rC
-1 -1 1240 2235 1 1 1250 2198 @b
1239 2235 -1 1 1261 2234 1 1239 2234 @a
1250 2199 -1 1 1261 2234 1 1250 2198 @a
np 1250 2198 :M
1239 2235 :L
1261 2235 :L
1250 2198 :L
eofill
400 1853 1500 882 rC
-4 -4 1290 2264 4 4 1286 1835 @b
gR
gS 400 1610 1500 1125 rC
-1 -1 1278 1873 1 1 1288 1836 @b
1277 1873 -1 1 1299 1872 1 1277 1872 @a
1288 1837 -1 1 1299 1872 1 1288 1836 @a
np 1288 1836 :M
1277 1873 :L
1299 1873 :L
1288 1836 :L
eofill
gS
.26 .26 scale
5138.723 7139.257 :M
f0_144 sf
-.008(Reference args and)A
5138.723 7285.191 :M
-.018(local variables at)A
5138.723 7434.966 :M
(fixed \(positive\) offset)S
5138.723 7580.9 :M
(from FP)S
gR
1213 2199 -4 4 1267 2195 4 1213 2195 @a
1225 1837 -4 4 1317 1833 4 1225 1833 @a
1213 2276 -4 4 1264 2319 4 1213 2272 @a
-4 -4 1217 2385 4 4 1260 2322 @b
gS
.26 .26 scale
4992.78 8867.426 :M
f0_144 sf
(Grows and shrinks during)S
4992.78 9013.36 :M
-.009(expression evaluation)A
3406.612 8003.342 :M
-.06(\(old FP,  RA\))A
1839.647 9716.149 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
1966.387 9716.149 :M
f0_144 sf
(Many variations on stacks possible \(up/down, last pushed / next \))S
1839.647 9950.412 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
1966.387 9950.412 :M
f0_144 sf
(Block structured languages contain link to lexically enclosing frame.)S
6144.96 6755.22 :M
(High Mem)S
6098.873 9347.473 :M
(Low Mem)S
gR
300.5 1510.5 1699 1324 rS
gR
gS 25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
endp
%%Page: 10 10
%%BeginPageSetup
initializepage
(dave; page: 10 of 18)setjob
%%EndPageSetup
gS 0 0 2300 3041 rC
25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
1 G
25 20 2250 3000 rF
0 G
400 305 1500 1125 rC
300.5 205.5 1699 1324 rS
1 G
401 306 1500 1125 rF
gS
.26 .26 scale
1774.357 5361.164 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.19)A
6290.903 5384.206 :M
1 G
0 G
-.034(\251DAP & SIK 1995)A
gR
638 655 466 153 rF
0 G
4 lw
640 657 462 149 rS
1 G
638 917 466 117 rF
0 G
640 919 462 113 rS
1 G
638 804 466 117 rF
0 G
640 806 462 113 rS
gS
.26 .26 scale
2081.605 1478.544 :M
f0_192 sf
-.005(MIPS: Software conventions)A
gR
638 505 479 831 rS
gS
.26 .26 scale
2507.912 2039.239 :M
f0_80 sf
(0)S
2795.957 2039.239 :M
-.151(zero)A
3084.002 2039.239 :M
(constant 0)S
2507.912 2181.333 :M
(1)S
2795.957 2181.333 :M
-.093(at)A
3087.842 2181.333 :M
-.01(reserved for assembler)A
2507.912 2327.267 :M
(2)S
2795.957 2327.267 :M
-.946(v0)A
3084.002 2327.267 :M
-.022(expression evaluation and)A
2507.912 2469.361 :M
(3)S
2795.957 2469.361 :M
-.946(v1)A
3084.002 2469.361 :M
(function results)S
2507.912 2615.295 :M
(4)S
2795.957 2615.295 :M
-.946(a0)A
3084.002 2615.295 :M
-.108(arguments)A
2507.912 2757.389 :M
(5)S
2795.957 2757.389 :M
-.946(a1)A
2507.912 2903.324 :M
(6)S
2795.957 2903.324 :M
-.946(a2)A
2507.912 3045.417 :M
(7)S
2795.957 3045.417 :M
-.946(a3)A
2507.912 3191.352 :M
(8)S
2795.957 3191.352 :M
-.093(t0)A
3087.842 3191.352 :M
-.024(temporary: caller saves)A
2507.912 3333.446 :M
-.033(. . .)A
2507.912 3479.38 :M
-.946(15)A
2795.957 3479.38 :M
-.093(t7)A
2507.912 3621.474 :M
-.946(16)A
2795.957 3621.474 :M
-.946(s0)A
3084.002 3621.474 :M
(callee saves)S
2507.912 3767.408 :M
-.033(. . .)A
2507.912 3909.502 :M
-.946(23)A
2795.957 3909.502 :M
-.946(s7)A
2507.912 4055.436 :M
-.946(24)A
2795.957 4055.436 :M
-.093(t8)A
2507.912 4197.53 :M
-.946(25)A
2795.957 4197.53 :M
-.093(t9)A
2507.912 4343.464 :M
-.946(26)A
2795.957 4343.464 :M
-.946(k0)A
3084.002 4343.464 :M
(reserved for OS kernel)S
2507.912 4485.558 :M
-.946(27)A
2795.957 4485.558 :M
-.946(k1)A
2507.912 4631.492 :M
-.946(28)A
2795.957 4631.492 :M
-.734(gp)A
3080.161 4631.492 :M
-.036(Pointer to global area)A
2507.912 4773.586 :M
-.946(29)A
2795.957 4773.586 :M
-.34(sp)A
3084.002 4773.586 :M
-.055(Stack pointer)A
2507.912 4919.52 :M
-.946(30)A
2795.957 4919.52 :M
-.488(fp)A
3080.161 4919.52 :M
-.005(frame pointer)A
2507.912 5061.614 :M
-.946(31)A
2795.957 5061.614 :M
-.586(ra)A
3080.161 5061.614 :M
-.037(Return Address \(HW\))A
gR
1 lw
300.5 205.5 1699 1324 rS
gR
gS 400 1610 1500 1125 rC
300.5 1510.5 1699 1324 rS
1 G
401 1611 1500 1125 rF
gS
.26 .26 scale
1774.357 10372.853 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.20)A
6290.903 10395.895 :M
-.034(\251DAP & SIK 1995)A
2023.996 6417.267 :M
f0_192 sf
(MIPS / GCC Calling Conventions)S
gR
0 G
4 lw
1389 1737 162 150 rS
1177 1737 113 50 rS
gS
.26 .26 scale
4608.72 6851.229 :M
f0_144 sf
(FP)S
gR
400 1610 956 1125 rC
1288 1775 -4 4 1378 1808 4 1288 1771 @a
gR
gS 400 1610 1500 1125 rC
1344 1786 -1 1 1374 1809 1 1344 1785 @a
-1 -1 1337 1805 1 1 1344 1785 @b
1336 1805 -1 1 1374 1809 1 1336 1804 @a
np 1374 1810 :M
1344 1785 :L
1336 1805 :L
1374 1810 :L
eofill
4 lw
1177 1800 113 50 rS
gS
.26 .26 scale
4608.72 7089.332 :M
f0_144 sf
-.094(SP)A
gR
400 1610 956 1125 rC
1288 1850 -4 4 1378 1871 4 1288 1846 @a
gR
gS 400 1610 1500 1125 rC
1341 1853 -1 1 1374 1872 1 1341 1852 @a
-1 -1 1336 1874 1 1 1341 1852 @b
-1 -1 1336 1874 1 1 1373 1872 @b
np 1374 1873 :M
1341 1852 :L
1335 1874 :L
1374 1873 :L
eofill
gS
.26 .26 scale
1889.575 7123.896 :M
f0_144 sf
(fact:)S
2016.315 7358.159 :M
-.19(addiu )A
2461.825 7358.159 :M
-.014($sp, $sp, -32)A
2016.315 7592.421 :M
-.059(sw)A
2465.665 7592.421 :M
-.011($ra, 20\($sp\))A
2016.315 7826.684 :M
-.059(sw)A
2465.665 7826.684 :M
($fp, 16\($sp\))S
2016.315 8060.947 :M
-.311(addu)A
2461.825 8060.947 :M
-.011($fp, $sp, 32)A
1889.575 8291.37 :M
(. . .)S
2016.315 8525.633 :M
-.059(sw)A
2465.665 8525.633 :M
($a0, 0\($fp\))S
1889.575 8759.895 :M
(...)S
2016.315 8994.158 :M
(lw)S
2461.825 8994.158 :M
-.015($31, 20\($sp\))A
2016.315 9228.421 :M
(lw)S
2461.825 9228.421 :M
($fp, 16\($sp\))S
2016.315 9462.684 :M
-.236(addiu)A
2461.825 9462.684 :M
-.024($sp, $sp, 32)A
2016.315 9696.947 :M
(jr)S
2465.665 9696.947 :M
-.077($31)A
gR
4 lw
1389 1937 162 149 rS
400 1610 956 1125 rC
1288 1975 -4 4 1378 2007 4 1288 1971 @a
gR
gS 400 1610 1500 1125 rC
1344 1986 -1 1 1374 2008 1 1344 1985 @a
-1 -1 1337 2005 1 1 1344 1985 @b
1336 2005 -1 1 1374 2008 1 1336 2004 @a
np 1374 2009 :M
1344 1985 :L
1336 2005 :L
1374 2009 :L
eofill
400 1610 1500 619 rC
1286 2051 -4 4 1389 2247 4 1286 2047 @a
gR
gS 400 1610 1500 1125 rC
1380 2210 -1 1 1387 2246 1 1380 2209 @a
-1 -1 1362 2220 1 1 1380 2209 @b
1361 2220 -1 1 1387 2246 1 1361 2219 @a
np 1387 2247 :M
1381 2209 :L
1361 2219 :L
1387 2247 :L
eofill
4 lw
1389 2086 162 163 rS
gS
.26 .26 scale
5472.855 8241.445 :M
f0_144 sf
-.054(ra)A
5426.768 8387.379 :M
-.483(oFP)A
gR
1389 2274 162 149 rS
400 1610 1500 868 rC
1286 2314 -4 4 1376 2496 4 1286 2310 @a
gR
gS 400 1610 1500 1125 rC
1367 2458 -1 1 1374 2495 1 1367 2457 @a
-1 -1 1349 2468 1 1 1367 2457 @b
1348 2468 -1 1 1374 2495 1 1348 2467 @a
np 1374 2496 :M
1368 2457 :L
1348 2467 :L
1374 2496 :L
eofill
400 1610 977 943 rC
1288 2388 -4 4 1388 2568 4 1288 2384 @a
gR
gS 400 1610 1500 1125 rC
1379 2534 -1 1 1387 2570 1 1379 2533 @a
-1 -1 1361 2544 1 1 1379 2533 @b
1360 2544 -1 1 1387 2570 1 1360 2543 @a
np 1387 2571 :M
1380 2533 :L
1360 2543 :L
1387 2571 :L
eofill
4 lw
1389 2423 162 163 rS
gS
.26 .26 scale
5426.768 9539.492 :M
f0_144 sf
-.054(ra)A
5426.768 9681.585 :M
-.189(old FP)A
gR
1177 1862 113 50 rS
gS
.26 .26 scale
4608.72 7281.351 :M
f0_144 sf
-.054(ra)A
gR
1177 1950 113 49 rS
gS
.26 .26 scale
4608.72 7665.389 :M
f0_144 sf
(FP)S
gR
1177 2011 113 50 rS
gS
.26 .26 scale
4608.72 7907.332 :M
f0_144 sf
-.094(SP)A
gR
1177 2074 113 50 rS
gS
.26 .26 scale
4608.72 8099.351 :M
f0_144 sf
-.054(ra)A
gR
1177 2287 113 50 rS
gS
.26 .26 scale
4608.72 8963.435 :M
f0_144 sf
(FP)S
gR
1177 2349 113 49 rS
gS
.26 .26 scale
4608.72 9201.539 :M
f0_144 sf
-.094(SP)A
gR
1177 2411 113 50 rS
gS
.26 .26 scale
6529.02 7281.351 :M
f0_144 sf
-.489(low)A
6529.02 7431.126 :M
-.021(address)A
gR
400 1610 1500 220 rC
-4 -4 1751 1852 4 4 1747 1735 @b
gR
gS 400 1610 1500 1125 rC
-1 -1 1750 1848 1 1 1759 1811 @b
1738 1812 -1 1 1760 1811 1 1738 1811 @a
1738 1812 -1 1 1750 1847 1 1738 1811 @a
np 1749 1848 :M
1760 1811 :L
1738 1811 :L
1749 1848 :L
eofill
gS
.26 .26 scale
1966.387 10161.632 :M
f0_144 sf
-.002(First four args passed in registers.)A
gR
300.5 1510.5 1699 1324 rS
gR
gS 25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
endp
%%Page: 11 11
%%BeginPageSetup
initializepage
(dave; page: 11 of 18)setjob
%%EndPageSetup
gS 0 0 2300 3041 rC
25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
1 G
25 20 2250 3000 rF
0 G
400 305 1500 1125 rC
300.5 205.5 1699 1324 rS
1 G
401 306 1500 1125 rF
gS
.26 .26 scale
1774.357 5361.164 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.21)A
6290.903 5384.206 :M
-.034(\251DAP & SIK 1995)A
2081.605 1478.544 :M
f0_192 sf
(Example in C: swap)S
1889.575 2112.206 :M
f0_144 sf
(swap\(int v[], int k\))S
1889.575 2346.469 :M
({)S
1889.575 2580.732 :M
-.07(   int temp;)A
1889.575 2814.995 :M
(   temp = v[k];)S
1889.575 3049.258 :M
-.005(   v[k] = v[k+1];)A
1889.575 3279.68 :M
-.004(   v[k+1] = temp;)A
1889.575 3513.943 :M
(})S
1839.647 4512.441 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
1966.387 4512.441 :M
f0_144 sf
(Assume temp is register $15; arguments in $a1, $a2; $16 is scratch reg:)S
1839.647 4746.704 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
1966.387 4746.704 :M
f0_144 sf
(Write MIPS code)S
gR
0 G
300.5 205.5 1699 1324 rS
gR
gS 400 1610 1500 1125 rC
300.5 1510.5 1699 1324 rS
1 G
401 1611 1500 1125 rF
gS
.26 .26 scale
1774.357 10372.853 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.22)A
6290.903 10395.895 :M
-.034(\251DAP & SIK 1995)A
2081.605 6490.234 :M
f0_192 sf
-.076(swap: MIPS)A
1889.575 6785.943 :M
f0_144 sf
(swap:)S
1889.575 7020.206 :M
(   addi)S
2465.665 7020.206 :M
-.025($sp,$sp, \3204)A
2016.315 7254.468 :M
-.059(sw)A
2465.665 7254.468 :M
-.011($16, 8\($sp\))A
2016.315 7488.731 :M
-.033(sll)A
2461.825 7488.731 :M
-.027($t2, $a2,2)A
2016.315 7722.994 :M
(add)S
2461.825 7722.994 :M
-.019($t2, $a1,$t2)A
2016.315 7957.257 :M
(lw)S
2461.825 7957.257 :M
-.007($15, 0\($t2\))A
2016.315 8191.52 :M
(lw)S
2461.825 8191.52 :M
-.007($16, 4\($t2\))A
2016.315 8425.783 :M
-.059(sw)A
2465.665 8425.783 :M
-.007($16, 0\($t2\))A
2016.315 8660.046 :M
-.059(sw)A
2465.665 8660.046 :M
-.007($15, 4\($t2\))A
2016.315 8894.309 :M
(lw)S
2461.825 8894.309 :M
-.011($16, 8\($sp\))A
2016.315 9128.571 :M
-.236(addiu)A
2461.825 9128.571 :M
-.022($sp,$sp, 4)A
2016.315 9362.834 :M
(jr)S
2465.665 9362.834 :M
-.077($31)A
gR
0 G
300.5 1510.5 1699 1324 rS
gR
gS 25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
endp
%%Page: 12 12
%%BeginPageSetup
initializepage
(dave; page: 12 of 18)setjob
%%EndPageSetup
gS 0 0 2300 3041 rC
25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
1 G
25 20 2250 3000 rF
0 G
400 305 1500 1125 rC
300.5 205.5 1699 1324 rS
1 G
401 306 1500 1125 rF
gS
.26 .26 scale
1774.357 5361.164 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.23)A
6290.903 5384.206 :M
-.034(\251DAP & SIK 1995)A
2023.996 1405.577 :M
f0_192 sf
-.028(Branch & Pipelines)A
gR
0 G
4 lw
555 542 857 57 rS
-4 -4 973 601 4 4 969 540 @b
-4 -4 1194 601 4 4 1190 540 @b
-4 -4 755 601 4 4 751 540 @b
gS
.26 .26 scale
2327.404 2223.577 :M
f0_144 sf
(ifetch)S
3153.133 2223.577 :M
-.022(read)A
3848.281 2223.577 :M
(compute)S
4777.707 2215.896 :M
(write)S
gR
778 626 857 56 rS
-4 -4 1196 684 4 4 1192 624 @b
-4 -4 1416 684 4 4 1412 624 @b
-4 -4 977 684 4 4 973 624 @b
gS
.26 .26 scale
3183.857 2542.328 :M
f0_144 sf
(ifetch)S
4009.586 2542.328 :M
-.022(read)A
4704.735 2542.328 :M
(compute)S
5634.16 2534.648 :M
(write)S
gR
1004 711 857 56 rS
-4 -4 1422 769 4 4 1418 709 @b
-4 -4 1643 769 4 4 1639 709 @b
-4 -4 1204 769 4 4 1200 709 @b
gS
.26 .26 scale
4055.674 2872.601 :M
f0_144 sf
(ifetch)S
4881.403 2872.601 :M
-.022(read)A
5576.551 2872.601 :M
(compute)S
6505.977 2864.92 :M
(write)S
1735.951 2231.258 :M
(Bnch)S
1735.951 2584.572 :M
-.007(Delay Slot)A
1743.632 2887.962 :M
(Branch Target)S
gR
400 305 1500 386 rC
936 572 -4 4 1002 709 4 936 568 @a
gR
gS 400 305 1500 1125 rC
994 672 -1 1 1000 708 1 994 671 @a
-1 -1 976 680 1 1 994 671 @b
975 680 -1 1 1000 708 1 975 679 @a
np 1000 709 :M
995 671 :L
975 679 :L
1000 709 :L
eofill
gS
.26 .26 scale
2158.417 3287.361 :M
f0_144 sf
(By the end of the read stage of the Branch instruction, the CPU knows)S
2158.417 3433.295 :M
(whether or not the branch will take place.  However, it will have fetched)S
2158.417 3583.07 :M
(the next instruction by then, regardless of whether or not a branch)S
2158.417 3729.004 :M
-.007(will be taken.)A
gR
300.5 205.5 1699 1324 rS
gR
gS 400 1610 1500 1125 rC
300.5 1510.5 1699 1324 rS
1 G
401 1611 1500 1125 rF
gS
.26 .26 scale
1774.357 10372.853 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.24)A
6290.903 10395.895 :M
-.034(\251DAP & SIK 1995)A
2081.605 6490.234 :M
1 G
f0_192 sf
0 G
(Delayed Branches: Redefine behavior)S
gR
1150 1898 203 54 rF
0 G
4 lw
1152 1900 199 50 rS
1 G
1150 1835 203 54 rF
0 G
1152 1837 199 50 rS
1 G
751 1835 204 54 rF
0 G
753 1837 200 50 rS
gS
.26 .26 scale
2976.465 7189.182 :M
1 G
f3_112 sf
0 G
-.074(Inst Fetch)A
gR
1 G
951 1835 203 54 rF
0 G
953 1837 199 50 rS
gS
.26 .26 scale
3648.57 7189.182 :M
f3_112 sf
-.047(Dcd & Op Fetch)A
4512.705 7189.182 :M
-.101(Execute)A
2208.345 7189.182 :M
f0_112 sf
(Branch:)S
gR
1351 1900 200 50 rS
1 G
951 1898 203 54 rF
0 G
953 1900 199 50 rS
gS
.26 .26 scale
3744.585 7427.285 :M
f3_112 sf
-.074(Inst Fetch)A
gR
1551 1975 200 49 rS
1 G
1150 1973 203 53 rF
0 G
1152 1975 199 49 rS
1351 1975 200 49 rS
gS
.26 .26 scale
4416.69 7427.285 :M
f3_112 sf
-.047(Dcd & Op Fetch)A
4512.705 7715.313 :M
-.074(Inst Fetch)A
5330.753 7427.285 :M
-.101(Execute)A
2304.36 7427.285 :M
f0_112 sf
-.004(execute successor)A
2304.36 7561.698 :M
(even if branch taken!)S
2880.45 7765.238 :M
-.005(Then branch target)A
2880.45 7899.651 :M
-.066(or continue)A
gR
400 1610 1500 345 rC
1161 1864 -4 4 1202 1973 4 1161 1860 @a
gR
gS 400 1610 1500 1125 rC
1197 1935 -1 1 1200 1972 1 1197 1934 @a
-1 -1 1179 1943 1 1 1197 1934 @b
1178 1943 -1 1 1200 1972 1 1178 1942 @a
np 1200 1973 :M
1198 1934 :L
1178 1942 :L
1200 1973 :L
eofill
gS
.26 .26 scale
4608.72 7907.332 :M
f0_112 sf
-.04(Single delay slot)A
4608.72 8041.745 :M
(impacts the critical path)S
2219.867 8517.952 :M
f3_112 sf
(\245)S
f0_112 sf
-.011(Compiler can fill a single delay slot  with a)A
2219.867 8721.492 :M
(useful instruction 50% of the time.)S
2507.912 8921.191 :M
f3_112 sf
(\245)S
f0_112 sf
-.017( try to move down from above jump)A
2507.912 9120.891 :M
f3_112 sf
(\245)S
f0_112 sf
-.017(move up from target, if safe)A
5530.464 8471.867 :M
f16_112 sf
-.044(add r3, r1, r2)A
5530.464 8671.567 :M
-.032(sub r4, r4, 1)A
5530.464 8875.107 :M
-.367(bz)A
5818.509 8875.107 :M
-.021(r4, LL)A
5530.464 9074.806 :M
-.275(...)A
5242.419 9478.046 :M
-.245(LL: )A
5530.464 9478.046 :M
(add rd, ...)S
gR
300.5 1510.5 1699 1324 rS
gR
gS 25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
endp
%%Page: 13 13
%%BeginPageSetup
initializepage
(dave; page: 13 of 18)setjob
%%EndPageSetup
gS 0 0 2300 3041 rC
25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
1 G
25 20 2250 3000 rF
0 G
400 305 1500 1125 rC
300.5 205.5 1699 1324 rS
1 G
401 306 1500 1125 rF
gS
.26 .26 scale
1774.357 5361.164 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.25)A
6290.903 5384.206 :M
-.034(\251DAP & SIK 1995)A
2081.605 1478.544 :M
f0_192 sf
(Standard and Delayed Interpretation)S
gR
443 411 1416 914 rC
gS
2.082 2.087 scale
324.143 216.113 :M
0 G
f0_18 sf
-.498(add)A
367.843 216.113 :M
-.111(rd, rs, rt)A
489.816 216.113 :M
-.042(R[rd] <- R[rs] + R[rd];)A
489.816 243.427 :M
(PC <- PC + 4;)S
324.143 270.261 :M
-.498(beq)A
367.843 270.261 :M
-.075(rs, rt, offset)A
489.816 270.261 :M
-.021(if  R[rd] == R[rt] then PC <- PC + SX\(offset\))A
489.816 297.096 :M
-.001(                            else PC <- PC + 4;)A
324.143 324.41 :M
-.498(sub)A
367.843 324.41 :M
-.111(rd, rs, rt)A
489.816 324.41 :M
(. . .)S
324.143 351.244 :M
(. . .)S
276.122 378.078 :M
-.496(L1:)A
324.143 378.078 :M
-.198(target)A
324.143 437.977 :M
-.498(add)A
367.843 437.977 :M
-.111(rd, rs, rt)A
489.816 437.977 :M
-.042(R[rd] <- R[rs] + R[rd];)A
489.816 465.291 :M
-.018(PC <- nPC;   nPC <- nPC + 4;)A
324.143 492.125 :M
-.498(beq)A
367.843 492.125 :M
-.075(rs, rt, offset)A
489.816 492.125 :M
-.02(if  R[rd] == R[rt] then nPC <- nPC + SX\(offset\))A
489.816 518.959 :M
-.001(                            else nPC <- nPC + 4;)A
489.816 546.273 :M
-.062(PC <- nPC)A
324.143 573.108 :M
-.498(sub)A
367.843 573.108 :M
-.111(rd, rs, rt)A
489.816 573.108 :M
(. . .)S
324.143 600.421 :M
(. . .)S
276.122 627.256 :M
-.496(L1:)A
324.143 627.256 :M
-.198(target)A
gR
0 G
2 lw
446 425 125 50 rS
gS
2.082 2.087 scale
231.942 227.135 :M
f0_18 sf
(PC)S
gR
446 875 125 50 rS
gS
2.082 2.087 scale
231.942 443.248 :M
f0_18 sf
(PC)S
gR
446 938 125 50 rS
gS
2.082 2.087 scale
231.942 472.957 :M
f0_18 sf
-.498(nPC)A
gR
445 826 -2 2 1834 824 2 445 824 @a
gS
2.082 2.087 scale
717.917 617.193 :M
f8_18 sf
18 f12_1 :p
138.01 :m
(Delayed Loads?)S
gR
gR
gS 400 305 1500 1125 rC
300.5 205.5 1699 1324 rS
gR
gS 400 1610 1500 1125 rC
300.5 1510.5 1699 1324 rS
1 G
401 1611 1500 1125 rF
gS
.26 .26 scale
1774.357 10372.853 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.26)A
6290.903 10395.895 :M
-.034(\251DAP & SIK 1995)A
2023.996 6417.267 :M
f0_192 sf
(Delayed Branches \(cont.\))S
2169.939 6724.497 :M
f8_144 sf
(Execution History)S
2192.983 7050.929 :M
f0_144 sf
(instr0)S
2192.983 7346.637 :M
(BCND X)S
2192.983 7638.506 :M
(instr1)S
2192.983 7934.215 :M
(instr2)S
2192.983 8226.083 :M
(   .)S
2192.983 8521.792 :M
(   .)S
2192.983 8813.661 :M
(   .)S
2192.983 9109.37 :M
(X:)S
5257.782 7050.929 :M
(PC)S
5257.782 7346.637 :M
(nPC)S
gR
0 G
1318 1610 582 1125 rC
1300 1818 -4 4 1358 1814 4 1300 1814 @a
gR
gS 400 1610 1500 1125 rC
1301 1817 -1 1 1338 1826 1 1301 1816 @a
-1 -1 1338 1827 1 1 1337 1805 @b
-1 -1 1302 1817 1 1 1337 1805 @b
np 1301 1816 :M
1338 1827 :L
1338 1805 :L
1301 1816 :L
eofill
1318 1610 582 1125 rC
1300 1900 -4 4 1364 1896 4 1300 1896 @a
gR
gS 400 1610 1500 1125 rC
1301 1899 -1 1 1338 1908 1 1301 1898 @a
-1 -1 1338 1909 1 1 1337 1887 @b
-1 -1 1302 1899 1 1 1337 1887 @b
np 1301 1898 :M
1338 1909 :L
1338 1887 :L
1301 1898 :L
eofill
gS
.26 .26 scale
4447.415 7354.318 :M
f0_144 sf
(PC)S
4447.415 7650.027 :M
(nPC)S
gR
1108 1610 792 1125 rC
1090 1897 -4 4 1148 1893 4 1090 1893 @a
gR
gS 400 1610 1500 1125 rC
1091 1896 -1 1 1128 1905 1 1091 1895 @a
-1 -1 1128 1906 1 1 1127 1884 @b
-1 -1 1092 1896 1 1 1127 1884 @b
np 1091 1895 :M
1128 1906 :L
1128 1884 :L
1091 1895 :L
eofill
1108 1610 792 1125 rC
1090 1979 -4 4 1154 1975 4 1090 1975 @a
gR
gS 400 1610 1500 1125 rC
1091 1978 -1 1 1128 1987 1 1091 1977 @a
-1 -1 1128 1988 1 1 1127 1966 @b
-1 -1 1092 1978 1 1 1127 1966 @b
np 1091 1977 :M
1128 1988 :L
1128 1966 :L
1091 1977 :L
eofill
gS
.26 .26 scale
3034.074 7619.304 :M
f0_144 sf
(PC)S
3034.074 7915.013 :M
(nPC)S
gR
739 1610 1161 1125 rC
721 1966 -4 4 780 1962 4 721 1962 @a
gR
gS 400 1610 1500 1125 rC
722 1965 -1 1 759 1974 1 722 1964 @a
-1 -1 759 1975 1 1 758 1953 @b
-1 -1 723 1965 1 1 758 1953 @b
np 722 1964 :M
759 1975 :L
759 1953 :L
722 1964 :L
eofill
739 1610 1161 1125 rC
721 2047 -4 4 786 2043 4 721 2043 @a
gR
gS 400 1610 1500 1125 rC
722 2046 -1 1 759 2055 1 722 2045 @a
-1 -1 759 2056 1 1 758 2034 @b
-1 -1 723 2046 1 1 758 2034 @b
np 722 2045 :M
759 2056 :L
759 2034 :L
722 2045 :L
eofill
gS
.26 .26 scale
3706.179 7619.304 :M
f0_144 sf
(PC)S
3706.179 9090.168 :M
(nPC)S
gR
914 1610 986 1125 rC
896 1966 -4 4 955 1962 4 896 1962 @a
gR
gS 400 1610 1500 1125 rC
897 1965 -1 1 934 1974 1 897 1964 @a
-1 -1 934 1975 1 1 933 1953 @b
-1 -1 898 1965 1 1 933 1953 @b
np 897 1964 :M
934 1975 :L
934 1953 :L
897 1964 :L
eofill
921 1610 979 1125 rC
903 2347 -4 4 967 2343 4 903 2343 @a
gR
gS 400 1610 1500 1125 rC
904 2346 -1 1 941 2355 1 904 2345 @a
-1 -1 941 2356 1 1 940 2334 @b
-1 -1 905 2346 1 1 940 2334 @b
np 904 2345 :M
941 2356 :L
941 2334 :L
904 2345 :L
eofill
-4 -4 896 2432 4 4 892 1806 @b
-4 -4 723 2421 4 4 719 1795 @b
-4 -4 1085 2432 4 4 1081 1806 @b
-4 -4 1298 2432 4 4 1294 1806 @b
gS
.26 .26 scale
5223.216 9259.144 :M
f0_144 sf
(t0)S
4455.096 9259.144 :M
(t1)S
3706.179 9274.506 :M
(t2)S
3022.552 9259.144 :M
-.105(t2')A
3544.874 8268.327 :M
f8_144 sf
(Branch)S
3583.28 8414.262 :M
-.019(Taken)A
2830.522 8195.36 :M
(Branch)S
2957.262 8341.295 :M
-.417(Not)A
2868.928 8491.069 :M
-.019(Taken)A
2200.664 9700.787 :M
f0_144 sf
-.004(Branches are the bane of pipelined machines)A
2200.664 9846.722 :M
(Delayed branches complicate the compiler slightly, but make pipelining)S
2200.664 9992.656 :M
-.003(   easier to implement and more effective)A
2200.664 10138.59 :M
(Good strategy to move some complexity to compile time)S
gR
300.5 1510.5 1699 1324 rS
gR
gS 25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
endp
%%Page: 14 14
%%BeginPageSetup
initializepage
(dave; page: 14 of 18)setjob
%%EndPageSetup
gS 0 0 2300 3041 rC
25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
1 G
25 20 2250 3000 rF
0 G
400 305 1500 1125 rC
300.5 205.5 1699 1324 rS
1 G
401 306 1500 1125 rF
gS
.26 .26 scale
1774.357 5361.164 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.27)A
6290.903 5384.206 :M
-.034(\251DAP & SIK 1995)A
2081.605 1478.544 :M
f0_192 sf
(Miscellaneous MIPS instructions)S
1889.575 2112.206 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 2112.206 :M
f0_144 sf
-.029(break)A
3617.845 2112.206 :M
(A breakpoint trap occurs, transfers control to )S
3617.845 2258.141 :M
(exception handler)S
1889.575 2492.403 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 2492.403 :M
f0_144 sf
-.045(syscall)A
3617.845 2492.403 :M
(A system trap occurs, transfers control to )S
3617.845 2638.338 :M
(exception handler)S
1889.575 2872.601 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 2872.601 :M
f0_144 sf
-.007(coprocessor instrs.)A
3614.005 2872.601 :M
(Support for floating point: discussed later)S
1889.575 3106.863 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 3106.863 :M
f0_144 sf
-.049(TLB instructions)A
3614.005 3106.863 :M
(Support for virtual memory: discussed later)S
1889.575 3341.126 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 3341.126 :M
f0_144 sf
(restore from exception)S
3614.005 3341.126 :M
(Restores previous interrupt mask & kernel/user )S
3617.845 3487.061 :M
(mode bits into status register)S
1889.575 3721.323 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 3721.323 :M
f0_144 sf
-.036(load word left/right)A
3614.005 3721.323 :M
(Supports misaligned word loads)S
1889.575 3955.586 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 3955.586 :M
f0_144 sf
(store word left/right)S
3617.845 3955.586 :M
(Supports misaligned word stores)S
gR
0 G
300.5 205.5 1699 1324 rS
gR
gS 400 1610 1500 1125 rC
300.5 1510.5 1699 1324 rS
1 G
401 1611 1500 1125 rF
gS
.26 .26 scale
1774.357 10372.853 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.28)A
6290.903 10395.895 :M
-.034(\251DAP & SIK 1995)A
2081.605 6490.234 :M
f0_192 sf
(Details of the MIPS instruction set)S
1889.575 7123.896 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 7123.896 :M
f0_144 sf
(Register zero always has the value zero \(even if you try to write it\))S
1889.575 7358.159 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 7358.159 :M
f0_144 sf
(Branch and jump instructions put the return address PC+4 into the link )S
2016.315 7504.093 :M
(register)S
1889.575 7738.356 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 7738.356 :M
f0_144 sf
(All instructions change all 32 bits of the destination reigster \(including lui, )S
2016.315 7884.29 :M
(lb, lh\) and all read all 32 bits of sources \(add, sub, and, or, \311\))S
1889.575 8118.553 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 8118.553 :M
f0_144 sf
(Immediate arithmetic and logical instructions are extended as follows:)S
2204.504 8333.614 :M
f3_144 sf
(\245)S
2323.563 8333.614 :M
f0_144 sf
(logical immediates are zero extended to 32 bits)S
2204.504 8552.515 :M
f3_144 sf
(\245)S
2323.563 8552.515 :M
f0_144 sf
(arithmetic immediates are sign extended to 32 bits)S
1889.575 8786.778 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 8786.778 :M
f0_144 sf
(The data loaded by the instructions lb and lh are extended as follows:)S
2204.504 9001.839 :M
f3_144 sf
(\245)S
2323.563 9001.839 :M
f0_144 sf
(lbu, lhu are zero extended)S
2204.504 9216.9 :M
f3_144 sf
(\245)S
2323.563 9216.9 :M
f0_144 sf
-.003(lb, lh are sign extended)A
1889.575 9451.163 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 9451.163 :M
f0_144 sf
(Overflow can occur in these arithmetic and logical instructions:)S
2204.504 9666.224 :M
f3_144 sf
(\245)S
2323.563 9666.224 :M
f0_144 sf
(add, sub, addi)S
2204.504 9885.125 :M
f3_144 sf
(\245)S
2323.563 9885.125 :M
f0_144 sf
-.104(it cannot)A
gR
0 G
638 2579 -2 2 763 2577 2 638 2577 @a
gS
.26 .26 scale
2922.697 9885.125 :M
f0_144 sf
( occur in addu, subu, addiu, and, or, xor, nor, shifts, mult, )S
2323.563 10031.06 :M
(multu, div, divu)S
gR
300.5 1510.5 1699 1324 rS
gR
gS 25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
endp
%%Page: 15 15
%%BeginPageSetup
initializepage
(dave; page: 15 of 18)setjob
%%EndPageSetup
gS 0 0 2300 3041 rC
25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
1 G
25 20 2250 3000 rF
0 G
400 305 1500 1125 rC
300.5 205.5 1699 1324 rS
1 G
401 306 1500 1125 rF
gS
.26 .26 scale
1774.357 5361.164 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.29)A
6290.903 5384.206 :M
-.034(\251DAP & SIK 1995)A
2081.605 1478.544 :M
f0_192 sf
(Other ISAs)S
1889.575 2112.206 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 2112.206 :M
f0_144 sf
(Intel 8086/88 => 80286 => 80386 => 80486 => Pentium => P6)S
2204.504 2327.267 :M
f3_144 sf
(\245)S
2323.563 2327.267 :M
f0_144 sf
(8086 few transistors to implement 16-bit microprocessor)S
2204.504 2542.328 :M
f3_144 sf
(\245)S
2323.563 2542.328 :M
f0_144 sf
(tried to be somewhat compatible with 8-bit microprocessor 8080)S
2204.504 2761.23 :M
f3_144 sf
(\245)S
2323.563 2761.23 :M
f0_144 sf
(successors added features which where missing from 8086 over )S
2323.563 2907.164 :M
-.026(next 15 years)A
2204.504 3122.225 :M
f3_144 sf
(\245)S
2323.563 3122.225 :M
f0_144 sf
(product several different intel enigneers over 10 to 15 years)S
2204.504 3337.286 :M
f3_144 sf
(\245)S
2323.563 3337.286 :M
f0_144 sf
(Announced 1978)S
1889.575 3571.549 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 3571.549 :M
f0_144 sf
(VAX simple compilers & small code size =>)S
2204.504 3790.45 :M
f3_144 sf
(\245)S
2323.563 3790.45 :M
f0_144 sf
(efficient instruction encoding)S
2204.504 4005.511 :M
f3_144 sf
(\245)S
2323.563 4005.511 :M
f0_144 sf
(powerful addressing modes)S
2204.504 4220.572 :M
f3_144 sf
(\245)S
2323.563 4220.572 :M
f0_144 sf
(powerful instructions)S
2204.504 4435.633 :M
f3_144 sf
(\245)S
2323.563 4435.633 :M
f0_144 sf
-.007(few registers)A
2204.504 4654.535 :M
f3_144 sf
(\245)S
2323.563 4654.535 :M
f0_144 sf
(product of a single talented architect)S
2204.504 4869.596 :M
f3_144 sf
(\245)S
2323.563 4869.596 :M
f0_144 sf
(Announced 1977)S
gR
0 G
300.5 205.5 1699 1324 rS
gR
gS 400 1610 1500 1125 rC
300.5 1510.5 1699 1324 rS
1 G
401 1611 1500 1125 rF
gS
.26 .26 scale
1774.357 10372.853 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.30)A
6290.903 10395.895 :M
-.034(\251DAP & SIK 1995)A
2023.996 6417.267 :M
f0_192 sf
(Machine Examples: Address & Registers)S
1920.3 6762.9 :M
f0_144 sf
-.018(Intel 8086)A
1920.3 7792.121 :M
-.032(VAX 11)A
1920.3 8379.698 :M
-.019(MC 68000)A
1920.3 9262.985 :M
(MIPS)S
3936.615 6762.9 :M
-.008(2     x 8 bit bytes)A
3936.615 6908.835 :M
-.005(AX, BX, CX, DX)A
3936.615 7058.609 :M
-.013(SP, BP, SI, DI)A
3936.615 7204.544 :M
-.015(CS, SS, DS)A
3936.615 7350.478 :M
-.012(IP, Flags)A
3936.615 7792.121 :M
-.008(2    x 8 bit bytes)A
3936.615 7938.055 :M
-.016(16 x 32 bit GPRs)A
3936.615 8379.698 :M
-.008(2    x 8 bit bytes)A
3936.615 8525.633 :M
-.013(8 x 32 bit GPRs)A
3936.615 8675.407 :M
-.006(7 x 32 bit addr reg)A
3936.615 8821.341 :M
-.018(1 x 32 bit SP)A
3936.615 8967.276 :M
-.011(1 x 32 bit PC)A
3936.615 9262.985 :M
-.008(2    x 8 bit bytes)A
3936.615 9408.919 :M
-.016(32 x 32 bit GPRs)A
3936.615 9554.853 :M
-.012(32 x 32 bit FPRs)A
3936.615 9704.628 :M
(HI, LO, PC)S
5426.768 6762.9 :M
(acc, index, count, quot)S
5426.768 6908.835 :M
(stack, string)S
5426.768 7058.609 :M
-.007(code,stack,data segment)A
5426.768 7646.187 :M
(r15-- program counter)S
5426.768 7792.121 :M
(r14-- stack pointer)S
5426.768 7938.055 :M
(r13-- frame pointer)S
5426.768 8087.83 :M
(r12-- argument ptr)S
4032.63 7603.943 :M
-.103(32)A
3982.702 9163.135 :M
-.103(32)A
4032.63 8322.093 :M
-.103(24)A
4032.63 6659.21 :M
-.103(20)A
gR
0 G
300.5 1510.5 1699 1324 rS
gR
gS 25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
endp
%%Page: 16 16
%%BeginPageSetup
initializepage
(dave; page: 16 of 18)setjob
%%EndPageSetup
gS 0 0 2300 3041 rC
25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
1 G
25 20 2250 3000 rF
0 G
400 305 1500 1125 rC
300.5 205.5 1699 1324 rS
1 G
401 306 1500 1125 rF
gS
.26 .26 scale
1774.357 5361.164 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.31)A
6290.903 5384.206 :M
-.034(\251DAP & SIK 1995)A
2081.605 1478.544 :M
f0_192 sf
-.029(VAX Operations)A
1889.575 2112.206 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 2112.206 :M
f0_144 sf
(General Format:)S
2465.665 2346.469 :M
(\(operation\) \(datatype\) \(2, 3\))S
4193.935 2580.732 :M
-.006(2 or 3 explicit operands)A
1889.575 2814.995 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 2814.995 :M
f0_144 sf
-.01(For example)A
2465.665 3049.258 :M
(add)S
3037.915 3049.258 :M
-.033(\(b, w, l, f, d\)  \(2, 3\))A
1889.575 3279.68 :M
(  )S
2016.315 3279.68 :M
-.025(Yields)A
2465.665 3513.943 :M
(addb2)S
3041.755 3513.943 :M
(addw2)S
3617.845 3513.943 :M
(addl2)S
4193.935 3513.943 :M
(addf2)S
4770.025 3513.943 :M
(addd2)S
2465.665 3748.206 :M
(addb3)S
3041.755 3748.206 :M
(addw3)S
3617.845 3748.206 :M
(addl3)S
4193.935 3748.206 :M
(addf3)S
4770.025 3748.206 :M
(addd3)S
gR
0 G
300.5 205.5 1699 1324 rS
gR
gS 400 1610 1500 1125 rC
300.5 1510.5 1699 1324 rS
1 G
401 1611 1500 1125 rF
gS
.26 .26 scale
1774.357 10372.853 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.32)A
6290.903 10395.895 :M
-.034(\251DAP & SIK 1995)A
2023.996 6417.267 :M
f0_192 sf
(VAX format, addressing modes)S
1920.3 6897.314 :M
f0_144 sf
(General Instruction Format)S
gR
605 1825 869 127 rC
626 1872 114 59 rF
0 G
2 lw
627 1873 112 57 rS
632 1886 94 34 rC
gS
2.084 2.117 scale
325.22 899.287 :T
-325.22 -899.287 :T
304.22 903.287 :M
f17_12 sf
-.493(OpCode)A
gR
gR
1 G
gS 605 1825 869 127 rC
738 1872 115 59 rF
0 G
2 lw
739 1873 113 57 rS
851 1874 -2 2 890 1872 2 851 1872 @a
-2 -2 890 1874 2 2 888 1853 @b
888 1855 -2 2 909 1891 2 888 1853 @a
-2 -2 909 1893 2 2 907 1872 @b
907 1874 -2 2 984 1872 2 907 1872 @a
-2 -2 984 1931 2 2 982 1872 @b
907 1931 -2 2 984 1929 2 907 1929 @a
-2 -2 909 1950 2 2 907 1929 @b
888 1912 -2 2 909 1948 2 888 1910 @a
-2 -2 890 1931 2 2 888 1910 @b
851 1931 -2 2 890 1929 2 851 1929 @a
757 1884 54 34 rC
gS
2.084 2.117 scale
376.201 897.342 :T
-376.201 -897.342 :T
364.201 902.342 :M
f17_12 sf
(A/M)S
gR
gR
gS 605 1825 869 127 rC
982 1872 115 59 rF
0 G
2 lw
983 1873 113 57 rS
1095 1874 -2 2 1134 1872 2 1095 1872 @a
-2 -2 1134 1874 2 2 1132 1853 @b
1132 1855 -2 2 1153 1891 2 1132 1853 @a
-2 -2 1153 1893 2 2 1151 1872 @b
1151 1874 -2 2 1228 1872 2 1151 1872 @a
-2 -2 1228 1931 2 2 1226 1872 @b
1151 1931 -2 2 1228 1929 2 1151 1929 @a
-2 -2 1153 1950 2 2 1151 1929 @b
1132 1912 -2 2 1153 1948 2 1132 1910 @a
-2 -2 1134 1931 2 2 1132 1910 @b
1095 1931 -2 2 1134 1929 2 1095 1929 @a
1001 1884 54 34 rC
gS
2.084 2.117 scale
492.283 897.342 :T
-492.283 -897.342 :T
481.283 902.342 :M
f17_12 sf
(A/M)S
gR
gR
gS 605 1825 869 127 rC
1226 1872 115 59 rF
0 G
2 lw
1227 1873 113 57 rS
1339 1874 -2 2 1378 1872 2 1339 1872 @a
-2 -2 1378 1874 2 2 1376 1853 @b
1376 1855 -2 2 1397 1891 2 1376 1853 @a
-2 -2 1397 1893 2 2 1395 1872 @b
1395 1874 -2 2 1472 1872 2 1395 1872 @a
-2 -2 1472 1931 2 2 1470 1872 @b
1395 1931 -2 2 1472 1929 2 1395 1929 @a
-2 -2 1397 1950 2 2 1395 1929 @b
1376 1912 -2 2 1397 1948 2 1376 1910 @a
-2 -2 1378 1931 2 2 1376 1910 @b
1339 1931 -2 2 1378 1929 2 1339 1929 @a
1245 1884 54 34 rC
gS
2.084 2.117 scale
610.364 897.342 :T
-610.364 -897.342 :T
598.364 902.342 :M
f17_12 sf
(A/M)S
gR
gR
gS 607 1827 86 34 rC
gS
2.084 2.117 scale
311.224 871.413 :T
-311.224 -871.413 :T
292.224 875.413 :M
0 G
f17_12 sf
(Byte 0)S
gR
gR
gS 776 1827 19 34 rC
gS
2.084 2.117 scale
376.318 871.413 :T
-376.318 -871.413 :T
373.318 875.413 :M
0 G
f17_12 sf
(1)S
gR
gR
gS 1020 1827 16 34 rC
gS
2.084 2.117 scale
493.4 871.413 :T
-493.4 -871.413 :T
490.4 875.413 :M
0 G
f17_12 sf
(n)S
gR
gR
gS 1282 1827 25 34 rC
gS
2.084 2.117 scale
621.118 871.413 :T
-621.118 -871.413 :T
616.118 875.413 :M
0 G
f17_12 sf
(m)S
gR
gR
0 G
gS 400 1610 1500 1125 rC
738 1952 -4 4 752 1970 4 738 1948 @a
751 1975 -4 4 967 1971 4 751 1971 @a
-4 -4 965 1977 4 4 973 1948 @b
gS
.26 .26 scale
621.118 871.413 :T
-621.118 -871.413 :T
2688.42 7715.313 :M
1 G
f0_144 sf
0 G
-.003(operand specifier)A
gR
1 G
713 2072 79 66 rF
0 G
4 lw
715 2074 75 62 rS
1 G
788 2072 79 66 rF
0 G
790 2074 75 62 rS
gS
.26 .26 scale
621.118 871.413 :T
-621.118 -871.413 :T
2830.522 8145.435 :M
f0_144 sf
(5)S
3118.567 8145.435 :M
(r)S
2016.315 8145.435 :M
1 G
0 G
(register)S
gR
1 G
713 2147 79 67 rF
0 G
715 2149 75 63 rS
1 G
788 2147 79 67 rF
0 G
790 2149 75 63 rS
gS
.26 .26 scale
621.118 871.413 :T
-621.118 -871.413 :T
3118.567 8433.464 :M
f0_144 sf
(r)S
2016.315 8433.464 :M
(autoinc)S
2830.522 8433.464 :M
1 G
0 G
(8)S
gR
1 G
713 2247 79 67 rF
0 G
715 2249 75 63 rS
1 G
788 2247 79 67 rF
0 G
790 2249 75 63 rS
gS
.26 .26 scale
621.118 871.413 :T
-621.118 -871.413 :T
3118.567 8817.501 :M
f0_144 sf
(r)S
2830.522 8817.501 :M
1 G
0 G
(A)S
gR
1 G
863 2247 153 67 rF
0 G
865 2249 149 63 rS
gS
.26 .26 scale
621.118 871.413 :T
-621.118 -871.413 :T
2062.402 8817.501 :M
f0_144 sf
(disp)S
3406.612 8817.501 :M
1 G
0 G
(byte)S
gR
1 G
713 2322 79 66 rF
0 G
715 2324 75 62 rS
1 G
788 2322 79 66 rF
0 G
790 2324 75 62 rS
gS
.26 .26 scale
621.118 871.413 :T
-621.118 -871.413 :T
3118.567 9105.529 :M
f0_144 sf
(r)S
2830.522 9105.529 :M
1 G
0 G
(C)S
gR
1 G
863 2322 329 66 rF
0 G
865 2324 325 62 rS
gS
.26 .26 scale
621.118 871.413 :T
-621.118 -871.413 :T
3406.612 9105.529 :M
1 G
f0_144 sf
0 G
-.11(half word)A
gR
1 G
713 2396 79 67 rF
0 G
715 2398 75 63 rS
1 G
788 2396 79 67 rF
0 G
790 2398 75 63 rS
gS
.26 .26 scale
621.118 871.413 :T
-621.118 -871.413 :T
3118.567 9393.557 :M
f0_144 sf
(r)S
2830.522 9393.557 :M
1 G
0 G
(E)S
gR
1 G
863 2396 678 67 rF
0 G
865 2398 674 63 rS
gS
.26 .26 scale
621.118 871.413 :T
-621.118 -871.413 :T
3406.612 9393.557 :M
1 G
f0_144 sf
0 G
-.311(word)A
gR
1 G
713 2496 79 67 rF
0 G
715 2498 75 63 rS
1 G
788 2496 79 67 rF
0 G
790 2498 75 63 rS
gS
.26 .26 scale
621.118 871.413 :T
-621.118 -871.413 :T
3118.567 9777.595 :M
f0_144 sf
(r)S
2830.522 9777.595 :M
(4)S
2062.402 9777.595 :M
1 G
0 G
(index)S
gR
1 G
863 2496 79 67 rF
0 G
865 2498 75 63 rS
1 G
938 2496 78 67 rF
0 G
940 2498 74 63 rS
gS
.26 .26 scale
621.118 871.413 :T
-621.118 -871.413 :T
3694.657 9777.595 :M
f0_144 sf
(r)S
3406.612 9777.595 :M
1 G
0 G
(m)S
gR
1 G
1012 2496 305 67 rF
0 G
1014 2498 301 63 rS
gS
.26 .26 scale
621.118 871.413 :T
-621.118 -871.413 :T
3982.702 9777.595 :M
f0_144 sf
-.006(displacement)A
gR
1 lw
300.5 1510.5 1699 1324 rS
gR
gS 25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
endp
%%Page: 17 17
%%BeginPageSetup
initializepage
(dave; page: 17 of 18)setjob
%%EndPageSetup
gS 0 0 2300 3041 rC
25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
1 G
25 20 2250 3000 rF
0 G
400 305 1500 1125 rC
300.5 205.5 1699 1324 rS
1 G
401 306 1500 1125 rF
gS
.26 .26 scale
1774.357 5361.164 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.33)A
6290.903 5384.206 :M
-.034(\251DAP & SIK 1995)A
2081.605 1478.544 :M
f0_192 sf
(swap: MIPS vs. VAX)S
1889.575 1774.253 :M
f0_144 sf
(swap:)S
1889.575 2008.516 :M
(   addiu)S
2465.665 2008.516 :M
-.025($sp,$sp, \3204)A
4193.935 2008.516 :M
-.024(.word ^m<r0,r1,r2,r3>)A
2016.315 2242.779 :M
-.059(sw)A
2465.665 2242.779 :M
-.011($16, 8\($sp\))A
2016.315 2477.042 :M
-.033(sll)A
2461.825 2477.042 :M
-.027($t2, $a2,2)A
4190.095 2477.042 :M
(movl)S
4770.025 2477.042 :M
(r2, 4\(a\))S
2016.315 2711.305 :M
(add)S
2461.825 2711.305 :M
-.019($t2, $a1,$t2)A
4190.095 2711.305 :M
(movl)S
4770.025 2711.305 :M
(r1, 8\(a\) )S
2016.315 2945.568 :M
(lw)S
2461.825 2945.568 :M
-.007($15, 0\($t2\))A
4193.935 2945.568 :M
(movl)S
4770.025 2945.568 :M
(r3, \(r2\)[r1])S
2016.315 3179.831 :M
(lw)S
2461.825 3179.831 :M
-.007($16, 4\($t2\))A
4193.935 3179.831 :M
(addl3)S
4766.185 3179.831 :M
-.007(r0, #1,8\(ap\))A
2016.315 3414.093 :M
-.059(sw)A
2465.665 3414.093 :M
-.007($16, 0\($t2\))A
4193.935 3414.093 :M
(movl)S
4770.025 3414.093 :M
(\(r2\)[r1],\(r2\)[r0])S
2016.315 3648.356 :M
-.059(sw)A
2465.665 3648.356 :M
-.007($15, 4\($t2\))A
4193.935 3648.356 :M
(movl)S
4770.025 3648.356 :M
(\(r2\)[r0],r3)S
2016.315 3882.619 :M
(lw)S
2461.825 3882.619 :M
-.011($16, 8\($sp\))A
2016.315 4116.882 :M
-.236(addiu)A
2461.825 4116.882 :M
-.022($sp,$sp, 4)A
2016.315 4351.145 :M
(jr)S
2465.665 4351.145 :M
-.077($31)A
4193.935 4351.145 :M
(ret)S
gR
0 G
300.5 205.5 1699 1324 rS
gR
gS 400 1610 1500 1125 rC
300.5 1510.5 1699 1324 rS
1 G
401 1611 1500 1125 rF
gS
.26 .26 scale
1774.357 10372.853 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.34)A
6290.903 10395.895 :M
-.034(\251DAP & SIK 1995)A
2081.605 6490.234 :M
f0_192 sf
(Summary)S
1889.575 7123.896 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 7123.896 :M
.988 .004 .16 :F
f0_144 sf
0 G
(Use general purpose registers with a load-store architecture: )S
6225.613 7123.896 :M
.988 .004 .16 :F
-.07(YES)A
gR
.988 .004 .16 :F
1621 1860 -2 2 1698 1858 2 1621 1858 @a
gS
.26 .26 scale
1889.575 7358.159 :M
0 G
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 7358.159 :M
f0_144 sf
(Provide at least 16 general purpose registers plus separate floating-)S
2016.315 7504.093 :M
.988 .004 .16 :F
0 G
(point registers: )S
.988 .004 .16 :F
(31 GPR & 32 FPR)S
gR
808 1959 -2 2 1119 1957 2 808 1957 @a
gS
.26 .26 scale
1889.575 7738.356 :M
0 G
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 7738.356 :M
f0_144 sf
(Support these addressing modes: displacement \(with an address offset )S
2016.315 7884.29 :M
(size of 12 to 16 bits\), immediate \(size 8 to 16 bits\), and register deferred; )S
2016.315 8034.065 :M
.988 .004 .16 :F
0 G
(: )S
.988 .004 .16 :F
-.004(YES: 16 bits for immediate, displacement \(disp=0 => register deferred\))A
gR
548 2097 -2 2 1801 2095 2 548 2095 @a
gS
.26 .26 scale
1889.575 8264.487 :M
0 G
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 8264.487 :M
.988 .004 .16 :F
f0_144 sf
0 G
( All addressing modes apply to all data transfer instructions : )S
6248.656 8264.487 :M
.988 .004 .16 :F
-.07(YES)A
gR
1627 2157 -2 2 1704 2155 2 1627 2155 @a
gS
.26 .26 scale
6536.701 8264.487 :M
0 G
f0_144 sf
( )S
1889.575 8498.75 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 8498.75 :M
f0_144 sf
(Use fixed instruction encoding if interested in performance and use )S
2016.315 8648.525 :M
.988 .004 .16 :F
0 G
(variable instruction encoding if interested in code size : )S
5864.596 8648.525 :M
.988 .004 .16 :F
(Fixed)S
gR
1527 2257 -2 2 1627 2255 2 1527 2255 @a
gS
.26 .26 scale
6240.975 8648.525 :M
0 G
f0_144 sf
( )S
1889.575 8882.787 :M
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 8882.787 :M
f0_144 sf
(Support these data sizes and types: 8-bit, 16-bit, 32-bit integers and 32-)S
2016.315 9028.722 :M
.988 .004 .16 :F
0 G
(bit and 64-bit IEEE 754 floating point numbers: )S
.988 .004 .16 :F
(YES)S
gR
1367 2356 -2 2 1444 2354 2 1367 2354 @a
gS
.26 .26 scale
1889.575 9262.985 :M
0 G
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 9262.985 :M
f0_144 sf
(Support these simple instructions, since they will dominate the number )S
2016.315 9408.919 :M
(of instructions executed: load, store, add, subtract, move register-)S
2016.315 9554.853 :M
(register, and, shift, compare equal, compare not equal, branch \(with a )S
2016.315 9704.628 :M
.988 .004 .16 :F
0 G
(PC-relative address at least 8-bits long\), jump, call, and return: )S
.988 .004 .16 :F
(YES, 16b)S
gR
1650 2532 -2 2 1813 2530 2 1650 2530 @a
gS
.26 .26 scale
1889.575 9938.891 :M
0 G
f3_144 sf
cF f1_144 sf
(\260)S
sf
2016.315 9938.891 :M
.988 .004 .16 :F
f0_144 sf
0 G
( Aim for a minimalist instruction set: )S
.988 .004 .16 :F
(YES)S
gR
1186 2593 -2 2 1263 2591 2 1186 2591 @a
0 G
300.5 1510.5 1699 1324 rS
gR
gS 25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
endp
%%Page: 18 18
%%BeginPageSetup
initializepage
(dave; page: 18 of 18)setjob
%%EndPageSetup
gS 0 0 2300 3041 rC
25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
1 G
25 20 2250 3000 rF
0 G
400 305 1500 1125 rC
300.5 205.5 1699 1324 rS
1 G
401 306 1500 1125 rF
gS
.26 .26 scale
1774.357 5361.164 :M
0 G
f0_80 sf
-.036(cs 152  Lec4.35)A
6290.903 5384.206 :M
-.034(\251DAP & SIK 1995)A
2081.605 1478.544 :M
f0_192 sf
(Summary: Salient features of MIPS R3000)S
2127.692 2119.887 :M
f3_160 sf
(\245)S
2185.301 2119.887 :M
f0_160 sf
(32-bit fixed format inst )S
f3_160 sf
(\(3 formats\))S
2127.692 2354.15 :M
(\245)S
2185.301 2354.15 :M
f0_160 sf
(32 32-bit GPR )S
f3_160 sf
(\(R0 contains zero\)  and 32 FP registers \(and HI LO\))S
2415.737 2584.572 :M
(\245)S
2473.346 2584.572 :M
(partitioned by software convention)S
2127.692 2814.995 :M
(\245)S
2185.301 2814.995 :M
f0_160 sf
(3-address, reg-reg arithmetic instr.)S
2127.692 3045.417 :M
f3_160 sf
(\245)S
2185.301 3045.417 :M
f0_160 sf
(Single address mode for load/store: )S
f3_160 sf
(base+displacement)S
2415.737 3256.638 :M
f3_144 sf
(\320)S
2496.39 3256.638 :M
-.012(no indirection)A
2127.692 3464.018 :M
(\320)S
2208.345 3464.018 :M
f0_144 sf
(16-bit immediate plus LUI)S
2127.692 3694.441 :M
f3_160 sf
(\245)S
2185.301 3694.441 :M
f0_160 sf
-.021(Simple branch conditions)A
2415.737 3924.863 :M
f3_160 sf
(\245)S
2473.346 3924.863 :M
( compare against zero or two registers for =)S
2415.737 4155.286 :M
(\245)S
2473.346 4155.286 :M
-.015( no condition codes)A
2127.692 4385.708 :M
(\245)S
2185.301 4385.708 :M
f0_160 sf
-.02(Delayed branch)A
2415.737 4616.131 :M
f3_160 sf
(\245)S
2473.346 4616.131 :M
(execute instruction after the branch \(or jump\) even if)S
2415.737 4846.553 :M
(the banch is taken \(Compiler can fill a delayed branch with )S
2415.737 5076.976 :M
-.004(useful work  about 50% of the time\))A
gR
0 G
300.5 205.5 1699 1324 rS
gR
gS 25 20 2250 3001 rC
-74.5 -79.5 2449 3200 rS
endp
%%Trailer
end		% md
%%EOF
